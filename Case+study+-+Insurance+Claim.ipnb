{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# HEALTH INSURANCE"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "VBBmHs6c5Gw7"
   },
   "source": [
    "## Problem Statement\n",
    "\n",
    "**A key challenge for the insurance industry is to charge each customer an appropriate premium for the risk they represent. The ability to predict a correct claim amount has a significant impact on insurer's management decisions and financial statements. Predicting the cost of claims in an insurance company is a real-life problem that needs to be solved in a more accurate and automated way. Several factors determine the cost of claims based on health factors like BMI, age, smoker, health conditions and others. Insurance companies apply numerous techniques for analyzing and predicting health insurance costs.**"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "_x20tzsN5Gw9"
   },
   "source": [
    "## Data Definition\n",
    "\n",
    "**age** : Age of the policyholder (Numeric)\n",
    "\n",
    "**sex:** Gender of policyholder (Categoric)\n",
    "\n",
    "**weight:** Weight of the policyholder (Numeric)\n",
    "\n",
    "**bmi**: Body mass index, providing an understanding of body, weights that are relatively high or low relative to height, objective index of body weight (kg / m ^ 2) using the ratio of height to weight (Numeric)\n",
    "\n",
    "**no_of_dependents:** Number of dependent persons on the policyholder (Numeric)\n",
    "\n",
    "**smoker:** Indicates policyholder is a smoker or a non-smoker (non-smoker=0;smoker=1) (Categoric)\n",
    "\n",
    "**claim:** The amount claimed by the policyholder (Numeric)\n",
    "\n",
    "**bloodpressure:** Bloodpressure reading of policyholder (Numeric)\n",
    "\n",
    "**diabetes:** Indicates policyholder suffers from diabetes or not (non-diabetic=0; diabetic=1) (Categoric)\n",
    "\n",
    "**regular_ex:** A policyholder regularly excercises or not (no-excercise=0; excercise=1) (Categoric)\n",
    "\n",
    "**job_title:** Job profile of the policyholder (Categoric)\n",
    "\n",
    "**city:** The city in which the policyholder resides (Categoric)\n",
    "\n",
    "**hereditary_diseases:**  A policyholder suffering from a hereditary diseases or not (Categoric)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "f2nLW34j5GxE"
   },
   "source": [
    "<a id='import_lib'></a>\n",
    "## 1. Import Libraries"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {
    "id": "5HMD5NdO5GxI"
   },
   "outputs": [],
   "source": [
    "# supress warnings \n",
    "from warnings import filterwarnings\n",
    "filterwarnings('ignore')\n",
    "\n",
    "# 'Os' module provides functions for interacting with the operating system \n",
    "import os\n",
    "\n",
    "# 'Pandas' is used for data manipulation and analysis\n",
    "import pandas as pd \n",
    "\n",
    "# 'Numpy' is used for mathematical operations on large, multi-dimensional arrays and matrices\n",
    "import numpy as np\n",
    "\n",
    "# 'Matplotlib' is a data visualization library for 2D and 3D plots, built on numpy\n",
    "import matplotlib.pyplot as plt\n",
    "%matplotlib inline\n",
    "\n",
    "# 'Seaborn' is based on matplotlib; used for plotting statistical graphics\n",
    "import seaborn as sns\n",
    "\n",
    "# 'Scikit-learn' (sklearn) emphasizes various regression, classification and clustering algorithms\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.metrics import mean_squared_error, mean_absolute_error, r2_score\n",
    "from sklearn.model_selection import GridSearchCV\n",
    "from sklearn.linear_model import Ridge, Lasso,ElasticNet\n",
    "from sklearn.model_selection import GridSearchCV\n",
    "\n",
    "# 'Statsmodels' is used to build and analyze various statistical models\n",
    "import statsmodels\n",
    "import statsmodels.api as sm\n",
    "import statsmodels.stats.api as sms\n",
    "from statsmodels.tools.eval_measures import rmse\n",
    "from statsmodels.compat import lzip\n",
    "from statsmodels.graphics.gofplots import ProbPlot\n",
    "from statsmodels.stats.outliers_influence import variance_inflation_factor as VIF\n",
    "\n",
    "# 'SciPy' is used to perform scientific computations\n",
    "from scipy.stats import f_oneway\n",
    "from scipy.stats import jarque_bera\n",
    "from scipy import stats"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "d9G8XMsu5GxO"
   },
   "source": [
    "<a id='set_options'></a>\n",
    "## 2. Set Options"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {
    "id": "Ke3WMDS15GxP"
   },
   "outputs": [],
   "source": [
    "# display all columns of the dataframe\n",
    "pd.options.display.max_columns = None\n",
    "\n",
    "# display all rows of the dataframe\n",
    "pd.options.display.max_rows = None\n",
    "\n",
    "# return an output value upto 6 decimals\n",
    "pd.options.display.float_format = '{:.6f}'.format"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "F1l-yo5X5GxR"
   },
   "source": [
    "<a id='Read_Data'></a>\n",
    "## 3. Read Data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "id": "5F-Nk_G_5GxT",
    "outputId": "0f029b8a-bcfb-4561-a191-8c1c853d5dee",
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>age</th>\n",
       "      <th>sex</th>\n",
       "      <th>weight</th>\n",
       "      <th>bmi</th>\n",
       "      <th>hereditary_diseases</th>\n",
       "      <th>no_of_dependents</th>\n",
       "      <th>smoker</th>\n",
       "      <th>city</th>\n",
       "      <th>bloodpressure</th>\n",
       "      <th>diabetes</th>\n",
       "      <th>regular_ex</th>\n",
       "      <th>job_title</th>\n",
       "      <th>claim</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>60.000000</td>\n",
       "      <td>male</td>\n",
       "      <td>64</td>\n",
       "      <td>24.300000</td>\n",
       "      <td>NoDisease</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>NewYork</td>\n",
       "      <td>72</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>Actor</td>\n",
       "      <td>13112.600000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>49.000000</td>\n",
       "      <td>female</td>\n",
       "      <td>75</td>\n",
       "      <td>22.600000</td>\n",
       "      <td>NoDisease</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>Boston</td>\n",
       "      <td>78</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>Engineer</td>\n",
       "      <td>9567.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>32.000000</td>\n",
       "      <td>female</td>\n",
       "      <td>64</td>\n",
       "      <td>17.800000</td>\n",
       "      <td>Epilepsy</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>Phildelphia</td>\n",
       "      <td>88</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>Academician</td>\n",
       "      <td>32734.200000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>61.000000</td>\n",
       "      <td>female</td>\n",
       "      <td>53</td>\n",
       "      <td>36.400000</td>\n",
       "      <td>NoDisease</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>Pittsburg</td>\n",
       "      <td>72</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>Chef</td>\n",
       "      <td>48517.600000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>19.000000</td>\n",
       "      <td>female</td>\n",
       "      <td>50</td>\n",
       "      <td>20.600000</td>\n",
       "      <td>NoDisease</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>Buffalo</td>\n",
       "      <td>82</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>HomeMakers</td>\n",
       "      <td>1731.700000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "        age     sex  weight       bmi hereditary_diseases  no_of_dependents  \\\n",
       "0 60.000000    male      64 24.300000           NoDisease                 1   \n",
       "1 49.000000  female      75 22.600000           NoDisease                 1   \n",
       "2 32.000000  female      64 17.800000            Epilepsy                 2   \n",
       "3 61.000000  female      53 36.400000           NoDisease                 1   \n",
       "4 19.000000  female      50 20.600000           NoDisease                 0   \n",
       "\n",
       "   smoker         city  bloodpressure  diabetes  regular_ex    job_title  \\\n",
       "0       0      NewYork             72         0           0        Actor   \n",
       "1       0       Boston             78         1           1     Engineer   \n",
       "2       1  Phildelphia             88         1           1  Academician   \n",
       "3       1    Pittsburg             72         1           0         Chef   \n",
       "4       0      Buffalo             82         1           0   HomeMakers   \n",
       "\n",
       "         claim  \n",
       "0 13112.600000  \n",
       "1  9567.000000  \n",
       "2 32734.200000  \n",
       "3 48517.600000  \n",
       "4  1731.700000  "
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# read csv file using pandas\n",
    "df_insurance = pd.read_csv(\"healthinsurance.csv\")\n",
    "\n",
    "# display the top 5 rows of the dataframe\n",
    "df_insurance.head()\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "u67Rpu6K5GxV"
   },
   "source": [
    "<a id='data_preparation'></a>\n",
    "## 4. Data Analysis and Preparation\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "XjiwFXQG5GxW"
   },
   "source": [
    "<a id='Data_Understanding'></a>\n",
    "### 4.1 Understand the Dataset"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "XA1jcJ0j5GxX"
   },
   "source": [
    "<a id='Data_Shape'></a>\n",
    "### 4.1.1 Data Dimension"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {
    "id": "lGEwKkm25GxY",
    "outputId": "56815768-6525-4a7f-b79b-da91ac0b3175"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(15000, 13)"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_insurance.shape"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "TYRILX945Gxa"
   },
   "source": [
    "### 4.1.2 Data Types\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "fF5tit9a5Gxb"
   },
   "source": [
    "**1. Check data types**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "id": "s-lt2L3q5Gxc",
    "outputId": "3f1b9303-7700-4c49-e975-a2a7922ac01d"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "age                    float64\n",
       "sex                     object\n",
       "weight                   int64\n",
       "bmi                    float64\n",
       "hereditary_diseases     object\n",
       "no_of_dependents         int64\n",
       "smoker                   int64\n",
       "city                    object\n",
       "bloodpressure            int64\n",
       "diabetes                 int64\n",
       "regular_ex               int64\n",
       "job_title               object\n",
       "claim                  float64\n",
       "dtype: object"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_insurance.dtypes"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "MNial0so5Gxd"
   },
   "source": [
    "**2. Change the incorrect data types**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {
    "id": "7U7HgaAD5Gxe"
   },
   "outputs": [],
   "source": [
    "# use .astype() to change the data type\n",
    "# convert numerical variables to categorical  \n",
    "\n",
    "# convert numeric variable 'smoker' to object (categorical) variable\n",
    "df_insurance.smoker = df_insurance.smoker.astype('object')\n",
    "\n",
    "# convert numeric variable 'diabetes' to object (categorical) variable\n",
    "df_insurance.diabetes = df_insurance.diabetes.astype('object')\n",
    "\n",
    "# convert 'regular_ex' variable diabetes to object (categorical) variable\n",
    "df_insurance.regular_ex = df_insurance.regular_ex.astype('object')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "01VuFc9B5Gxf"
   },
   "source": [
    "**3. Recheck the data types after the conversion**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {
    "id": "jVbpsiwc5Gxg",
    "outputId": "e7349851-7a31-4398-c63e-90dd887fb201"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "age                    float64\n",
       "sex                     object\n",
       "weight                   int64\n",
       "bmi                    float64\n",
       "hereditary_diseases     object\n",
       "no_of_dependents         int64\n",
       "smoker                  object\n",
       "city                    object\n",
       "bloodpressure            int64\n",
       "diabetes                object\n",
       "regular_ex              object\n",
       "job_title               object\n",
       "claim                  float64\n",
       "dtype: object"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# recheck the data types using .dtypes\n",
    "df_insurance.dtypes"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "FSm3XiGA5Gxh"
   },
   "source": [
    "Note the data types are now as per the data definition. Now we can proceed with the analysis."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "MzwJdyTH5Gxi"
   },
   "source": [
    "<a id='Summary_Statistics'></a>\n",
    "### 4.1.3 Summary Statistics"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {
    "id": "xAQAwjT_5Gxj",
    "outputId": "d45a826b-5e71-4d74-eef8-5979efd5687a"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>age</th>\n",
       "      <th>weight</th>\n",
       "      <th>bmi</th>\n",
       "      <th>no_of_dependents</th>\n",
       "      <th>bloodpressure</th>\n",
       "      <th>claim</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>14604.000000</td>\n",
       "      <td>15000.000000</td>\n",
       "      <td>14044.000000</td>\n",
       "      <td>15000.000000</td>\n",
       "      <td>15000.000000</td>\n",
       "      <td>15000.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>39.547521</td>\n",
       "      <td>64.909600</td>\n",
       "      <td>30.266413</td>\n",
       "      <td>1.129733</td>\n",
       "      <td>68.650133</td>\n",
       "      <td>13401.437620</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>14.015966</td>\n",
       "      <td>13.701935</td>\n",
       "      <td>6.122950</td>\n",
       "      <td>1.228469</td>\n",
       "      <td>19.418515</td>\n",
       "      <td>12148.239619</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>18.000000</td>\n",
       "      <td>34.000000</td>\n",
       "      <td>16.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1121.900000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>27.000000</td>\n",
       "      <td>54.000000</td>\n",
       "      <td>25.700000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>64.000000</td>\n",
       "      <td>4846.900000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>40.000000</td>\n",
       "      <td>63.000000</td>\n",
       "      <td>29.400000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>71.000000</td>\n",
       "      <td>9545.650000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>52.000000</td>\n",
       "      <td>76.000000</td>\n",
       "      <td>34.400000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>80.000000</td>\n",
       "      <td>16519.125000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>64.000000</td>\n",
       "      <td>95.000000</td>\n",
       "      <td>53.100000</td>\n",
       "      <td>5.000000</td>\n",
       "      <td>122.000000</td>\n",
       "      <td>63770.400000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "               age       weight          bmi  no_of_dependents  bloodpressure  \\\n",
       "count 14604.000000 15000.000000 14044.000000      15000.000000   15000.000000   \n",
       "mean     39.547521    64.909600    30.266413          1.129733      68.650133   \n",
       "std      14.015966    13.701935     6.122950          1.228469      19.418515   \n",
       "min      18.000000    34.000000    16.000000          0.000000       0.000000   \n",
       "25%      27.000000    54.000000    25.700000          0.000000      64.000000   \n",
       "50%      40.000000    63.000000    29.400000          1.000000      71.000000   \n",
       "75%      52.000000    76.000000    34.400000          2.000000      80.000000   \n",
       "max      64.000000    95.000000    53.100000          5.000000     122.000000   \n",
       "\n",
       "             claim  \n",
       "count 15000.000000  \n",
       "mean  13401.437620  \n",
       "std   12148.239619  \n",
       "min    1121.900000  \n",
       "25%    4846.900000  \n",
       "50%    9545.650000  \n",
       "75%   16519.125000  \n",
       "max   63770.400000  "
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# describe the numerical data\n",
    "df_insurance.describe()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "vQ_Lj-6t5Gxl"
   },
   "source": [
    "**2. For categorical features, we use .describe(include=object)**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {
    "id": "hWClrfLL5Gxm",
    "outputId": "f56582d4-0a12-4b61-a3fe-df80370a2c04"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>sex</th>\n",
       "      <th>hereditary_diseases</th>\n",
       "      <th>smoker</th>\n",
       "      <th>city</th>\n",
       "      <th>diabetes</th>\n",
       "      <th>regular_ex</th>\n",
       "      <th>job_title</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>15000</td>\n",
       "      <td>15000</td>\n",
       "      <td>15000</td>\n",
       "      <td>15000</td>\n",
       "      <td>15000</td>\n",
       "      <td>15000</td>\n",
       "      <td>15000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>unique</th>\n",
       "      <td>2</td>\n",
       "      <td>10</td>\n",
       "      <td>2</td>\n",
       "      <td>91</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>35</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>top</th>\n",
       "      <td>female</td>\n",
       "      <td>NoDisease</td>\n",
       "      <td>0</td>\n",
       "      <td>NewOrleans</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>Student</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>freq</th>\n",
       "      <td>7652</td>\n",
       "      <td>13998</td>\n",
       "      <td>12028</td>\n",
       "      <td>302</td>\n",
       "      <td>11655</td>\n",
       "      <td>11638</td>\n",
       "      <td>1320</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "           sex hereditary_diseases  smoker        city  diabetes  regular_ex  \\\n",
       "count    15000               15000   15000       15000     15000       15000   \n",
       "unique       2                  10       2          91         2           2   \n",
       "top     female           NoDisease       0  NewOrleans         1           0   \n",
       "freq      7652               13998   12028         302     11655       11638   \n",
       "\n",
       "       job_title  \n",
       "count      15000  \n",
       "unique        35  \n",
       "top      Student  \n",
       "freq        1320  "
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# describe the categorical data\n",
    "# include=object: selects the categorical features\n",
    "df_insurance.describe(include = object)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "MiTunCzF5Gxn"
   },
   "source": [
    "<a id='Missing_Values'></a>\n",
    "### 4.1.4 Missing Values"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "bmi                    956\n",
       "age                    396\n",
       "sex                      0\n",
       "weight                   0\n",
       "hereditary_diseases      0\n",
       "no_of_dependents         0\n",
       "smoker                   0\n",
       "city                     0\n",
       "bloodpressure            0\n",
       "diabetes                 0\n",
       "regular_ex               0\n",
       "job_title                0\n",
       "claim                    0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Find total missing values\n",
    "Total = df_insurance.isnull().sum().sort_values(ascending=False) \n",
    "Total"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {
    "id": "5oos2XCa5Gxo",
    "outputId": "85f34a9a-0e0a-48c5-f81f-b35bd0c2541a"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Total</th>\n",
       "      <th>Percentage of Missing Values</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>bmi</th>\n",
       "      <td>956</td>\n",
       "      <td>6.373333</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>age</th>\n",
       "      <td>396</td>\n",
       "      <td>2.640000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>sex</th>\n",
       "      <td>0</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>weight</th>\n",
       "      <td>0</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>hereditary_diseases</th>\n",
       "      <td>0</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>no_of_dependents</th>\n",
       "      <td>0</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>smoker</th>\n",
       "      <td>0</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>city</th>\n",
       "      <td>0</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>bloodpressure</th>\n",
       "      <td>0</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>diabetes</th>\n",
       "      <td>0</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>regular_ex</th>\n",
       "      <td>0</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>job_title</th>\n",
       "      <td>0</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>claim</th>\n",
       "      <td>0</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                     Total  Percentage of Missing Values\n",
       "bmi                    956                      6.373333\n",
       "age                    396                      2.640000\n",
       "sex                      0                      0.000000\n",
       "weight                   0                      0.000000\n",
       "hereditary_diseases      0                      0.000000\n",
       "no_of_dependents         0                      0.000000\n",
       "smoker                   0                      0.000000\n",
       "city                     0                      0.000000\n",
       "bloodpressure            0                      0.000000\n",
       "diabetes                 0                      0.000000\n",
       "regular_ex               0                      0.000000\n",
       "job_title                0                      0.000000\n",
       "claim                    0                      0.000000"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Find percent missing values\n",
    "Percent = (df_insurance.isnull().sum()*100/df_insurance.isnull().count()).sort_values(ascending=False)   \n",
    "\n",
    "# concat the 'Total' and 'Percent' columns using 'concat' function\n",
    "missing_data = pd.concat([Total, Percent], axis = 1, keys = ['Total', 'Percentage of Missing Values'])\n",
    "\n",
    "# print the missing data\n",
    "missing_data"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "WmxzwIRE5Gxp"
   },
   "source": [
    "The missing values are present in the data for the `age` and `bmi` variables. There are 396 (2.6%) missing values for the variable `age` and 956 (6.4%) missing values for the variable `bmi`"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "UuuzUOFU5Gxp"
   },
   "source": [
    "### Visualize Missing Values using Heatmap"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {
    "id": "CnYUMk615Gxp",
    "outputId": "b75e4a07-4518-4db5-8038-900466d0d432"
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1080x576 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(15, 8))\n",
    "sns.heatmap(df_insurance.isnull(), cbar=False)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "hxFruD-k5Gxq"
   },
   "source": [
    "### Deal with Missing Values\n",
    "\n",
    "Discuss - How to deal with missing data?<br>\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {
    "id": "nNuvPxci5Gxq",
    "outputId": "5c4e6ceb-8d41-449f-e0e9-66249e82c719"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "sex\n",
       "female   39.361040\n",
       "male     39.738395\n",
       "Name: age, dtype: float64"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# check the average age for male and female\n",
    "\n",
    "df_insurance['age'].groupby(df_insurance['sex'], axis=0).mean()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "vLN2l3b35Gxr"
   },
   "source": [
    "The average age for the male and female is nearly the same. We will fill in missing values with the mean age of the policyholder."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {
    "id": "dNCNSb545Gxr"
   },
   "outputs": [],
   "source": [
    "# fill the missing values with the mean value of 'age' using 'fillna()'\n",
    "df_insurance['age'].fillna(df_insurance['age'].mean(), inplace=True)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "JNl5KIoR5Gxs"
   },
   "source": [
    "Replace missing values by mean for the BMI."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {
    "id": "2PAXT6Ev5Gxs"
   },
   "outputs": [],
   "source": [
    "# fill the missing values with the mean value of 'bmi' using 'fillna()'\n",
    "\n",
    "df_insurance['bmi'].fillna(df_insurance['bmi'].mean(), inplace=True)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "UpArIJhB5Gxs"
   },
   "source": [
    "We have seen that the the minimum bloodpressure is 0, which is absurd. It implies that these are missing values. \n",
    "Let us replace these missing values with the median value."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {
    "id": "hncod3DU5Gxt"
   },
   "outputs": [],
   "source": [
    "# calculate the median of the bloodpressure using 'median()''\n",
    "median_bloodpressure = df_insurance['bloodpressure'].median()\n",
    "\n",
    "# replace zero values by median using 'replace()'\n",
    "df_insurance['bloodpressure'] = df_insurance['bloodpressure'].replace(0,median_bloodpressure) "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "JaoY8GxT5Gxt"
   },
   "source": [
    "Recheck the summary statistics to confirm the missing value treatment for the variable 'bloodpressure'."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {
    "id": "frS-GUXU5Gxt",
    "outputId": "f940d2e8-f086-4b08-e5cd-1cb2bf15cc5a"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>age</th>\n",
       "      <th>weight</th>\n",
       "      <th>bmi</th>\n",
       "      <th>no_of_dependents</th>\n",
       "      <th>bloodpressure</th>\n",
       "      <th>claim</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>15000.000000</td>\n",
       "      <td>15000.000000</td>\n",
       "      <td>15000.000000</td>\n",
       "      <td>15000.000000</td>\n",
       "      <td>15000.000000</td>\n",
       "      <td>15000.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>39.547521</td>\n",
       "      <td>64.909600</td>\n",
       "      <td>30.266413</td>\n",
       "      <td>1.129733</td>\n",
       "      <td>72.228533</td>\n",
       "      <td>13401.437620</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>13.829705</td>\n",
       "      <td>13.701935</td>\n",
       "      <td>5.924606</td>\n",
       "      <td>1.228469</td>\n",
       "      <td>11.269793</td>\n",
       "      <td>12148.239619</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>18.000000</td>\n",
       "      <td>34.000000</td>\n",
       "      <td>16.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>40.000000</td>\n",
       "      <td>1121.900000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>27.000000</td>\n",
       "      <td>54.000000</td>\n",
       "      <td>25.900000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>64.000000</td>\n",
       "      <td>4846.900000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>40.000000</td>\n",
       "      <td>63.000000</td>\n",
       "      <td>29.800000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>71.000000</td>\n",
       "      <td>9545.650000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>51.000000</td>\n",
       "      <td>76.000000</td>\n",
       "      <td>34.100000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>80.000000</td>\n",
       "      <td>16519.125000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>64.000000</td>\n",
       "      <td>95.000000</td>\n",
       "      <td>53.100000</td>\n",
       "      <td>5.000000</td>\n",
       "      <td>122.000000</td>\n",
       "      <td>63770.400000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "               age       weight          bmi  no_of_dependents  bloodpressure  \\\n",
       "count 15000.000000 15000.000000 15000.000000      15000.000000   15000.000000   \n",
       "mean     39.547521    64.909600    30.266413          1.129733      72.228533   \n",
       "std      13.829705    13.701935     5.924606          1.228469      11.269793   \n",
       "min      18.000000    34.000000    16.000000          0.000000      40.000000   \n",
       "25%      27.000000    54.000000    25.900000          0.000000      64.000000   \n",
       "50%      40.000000    63.000000    29.800000          1.000000      71.000000   \n",
       "75%      51.000000    76.000000    34.100000          2.000000      80.000000   \n",
       "max      64.000000    95.000000    53.100000          5.000000     122.000000   \n",
       "\n",
       "             claim  \n",
       "count 15000.000000  \n",
       "mean  13401.437620  \n",
       "std   12148.239619  \n",
       "min    1121.900000  \n",
       "25%    4846.900000  \n",
       "50%    9545.650000  \n",
       "75%   16519.125000  \n",
       "max   63770.400000  "
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# obtain the summary statistics of numeric variables using 'describe()'\n",
    "df_insurance.describe()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "C4AFaAIz5Gxu"
   },
   "source": [
    "To confirm the data is valid, observe the minimum and maximum value of the variable `bloodpressure` is 40"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "Bhudtak75Gxu"
   },
   "source": [
    "Let's view the missing value plot once again to see if the missing values have been imputed."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {
    "id": "OSekDIty5Gxv",
    "outputId": "7199fff6-6e16-45fa-be90-4e155a1f50fe"
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1080x576 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# set the figure size\n",
    "plt.figure(figsize=(15, 8))\n",
    "sns.heatmap(df_insurance.isnull(), cbar=False)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "fAa_GnPY5Gxv"
   },
   "source": [
    "Now, we obtain the dataset with no missing values."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "5t5POIFn5Gxv"
   },
   "source": [
    "<a id='correlation'></a>\n",
    "### 4.1.5 Correlation"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {
    "id": "zXZ5aFyP5Gxx",
    "outputId": "4476928c-6977-4bba-e7fd-e8e2e942603c"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['age', 'weight', 'bmi', 'no_of_dependents', 'bloodpressure', 'claim'], dtype='object')"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "\n",
    "df_numeric_features = df_insurance.select_dtypes(include=np.number)\n",
    "df_numeric_features.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {
    "id": "9utBijHB5Gxy",
    "outputId": "df7d496f-eba0-4bac-bc84-2c9e427c76d9"
   },
   "outputs": [],
   "source": [
    "# generate the correlation matrix\n",
    "corr =  df_numeric_features.corr()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {
    "id": "yvYrQgM_5Gxz",
    "outputId": "3eec6971-41ad-4a82-d832-e3506f8c0545"
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1080x576 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# set the figure size\n",
    "plt.figure(figsize=(15, 8))\n",
    "\n",
    "sns.heatmap(corr, cmap='YlGnBu', vmax=1.0, vmin=-1.0, annot = True, annot_kws={\"size\": 15}, )\n",
    "plt.title('Correlation between numeric features')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "2xa64prt5Gx0"
   },
   "source": [
    "<a id='categorical'></a>\n",
    "### 4.1.6 Analyze Categorical Variables\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {
    "id": "2WgC7Mmm5Gx1",
    "outputId": "ea6deaf2-6771-44ed-e473-2a2fdb22daa5"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>sex</th>\n",
       "      <th>hereditary_diseases</th>\n",
       "      <th>smoker</th>\n",
       "      <th>city</th>\n",
       "      <th>diabetes</th>\n",
       "      <th>regular_ex</th>\n",
       "      <th>job_title</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>15000</td>\n",
       "      <td>15000</td>\n",
       "      <td>15000</td>\n",
       "      <td>15000</td>\n",
       "      <td>15000</td>\n",
       "      <td>15000</td>\n",
       "      <td>15000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>unique</th>\n",
       "      <td>2</td>\n",
       "      <td>10</td>\n",
       "      <td>2</td>\n",
       "      <td>91</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>35</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>top</th>\n",
       "      <td>female</td>\n",
       "      <td>NoDisease</td>\n",
       "      <td>0</td>\n",
       "      <td>NewOrleans</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>Student</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>freq</th>\n",
       "      <td>7652</td>\n",
       "      <td>13998</td>\n",
       "      <td>12028</td>\n",
       "      <td>302</td>\n",
       "      <td>11655</td>\n",
       "      <td>11638</td>\n",
       "      <td>1320</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "           sex hereditary_diseases  smoker        city  diabetes  regular_ex  \\\n",
       "count    15000               15000   15000       15000     15000       15000   \n",
       "unique       2                  10       2          91         2           2   \n",
       "top     female           NoDisease       0  NewOrleans         1           0   \n",
       "freq      7652               13998   12028         302     11655       11638   \n",
       "\n",
       "       job_title  \n",
       "count      15000  \n",
       "unique        35  \n",
       "top      Student  \n",
       "freq        1320  "
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_insurance.describe(include=object)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "dWITU2zA5Gx1"
   },
   "source": [
    "There are 6 categorical variables. From the output we see that the variable cities has most number of categories. There are 91 cities in the data, of which NewOrleans occurs highes number of times.\n",
    "\n",
    "Let us visualize the variables. However, we shall exculde the variable `city` from it."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {
    "id": "NMmjOTRQ5Gx2",
    "outputId": "5647658a-de5a-4050-c0f5-8f000309b158",
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 1800x1440 with 6 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# create a list of all categorical variables\n",
    "df_categoric_features = df_insurance.select_dtypes(include='object').drop(['city'], axis=1)\n",
    "\n",
    "# plot the count distribution for each categorical variable \n",
    "# 'figsize' sets the figure size\n",
    "fig, ax = plt.subplots(3, 2, figsize=(25, 20))\n",
    "\n",
    "# plot a count plot for all the categorical variables\n",
    "for variable, subplot in zip(df_categoric_features, ax.flatten()):\n",
    "    \n",
    "    countplot = sns.countplot(y=df_insurance[variable], ax=subplot )\n",
    "       \n",
    "    countplot.set_ylabel(variable, fontsize = 30)\n",
    "\n",
    "plt.tight_layout()   \n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "cb-FOAN05Gx2"
   },
   "source": [
    "Now consider the variable `city`."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {
    "id": "o5xZu0zV5Gx3",
    "outputId": "3c0562e7-edc5-445d-984e-a6cb2a95c4ad",
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1080x1080 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# set the figure size\n",
    "plt.figure(figsize=(15, 15))\n",
    "countplot = sns.countplot(y=df_insurance['city'], orient=\"h\")\n",
    "countplot.set_ylabel('City', fontsize = 30)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "c-t1S8UY5Gx4"
   },
   "source": [
    "### 4.1.7 Analyze Relationship Between Target and Categorical Variables"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {
    "id": "cDUqYdoC5Gx4",
    "outputId": "135e4c2c-7c45-4ce0-9212-b3e685d92fc4"
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1800x1080 with 6 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# plot the boxplot for each categorical variable \n",
    "# create subplots using subplots()\n",
    "# 6 subplots in 3 rows and 2 columns\n",
    "# 'figsize' sets the figure size\n",
    "fig, ax = plt.subplots(3, 2, figsize=(25, 15))\n",
    "\n",
    "# plot a boxplot for all the categorical variables \n",
    "for variable, subplot in zip(df_categoric_features, ax.flatten()):\n",
    "    \n",
    "    # x: variable on x-axis\n",
    "    # y: variable in y-axis\n",
    "    # data: dataframe to be used\n",
    "    # ax: specifies the axes object to draw the plot onto\n",
    "    boxplt = sns.boxplot(x=variable, y='claim', data=df_insurance, ax=subplot)\n",
    "    \n",
    "    # set the x-axis labels \n",
    "    # fontsize = 30: sets the font size to 30\n",
    "    boxplt.set_xlabel(variable, fontsize = 30)\n",
    "\n",
    "# avoid overlapping of the plots using tight_layout()    \n",
    "plt.tight_layout()   \n",
    "\n",
    "# display the plot\n",
    "plt.show() "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "sC5cLYNo5Gx5"
   },
   "source": [
    "Since the variable `city` has 91 categories, we shall plot it separately."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {
    "id": "psWmSOH45Gx5",
    "outputId": "4cd631ca-9939-42c9-ab1a-cbb77b6e00bb"
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1080x576 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# set the figure size\n",
    "plt.figure(figsize=(15, 8))\n",
    "\n",
    "# plot the boxplot for categorical variable 'city'\n",
    "\n",
    "ax = sns.boxplot(x=df_insurance[\"city\"], y=df_insurance['claim'], data=df_insurance)\n",
    "ax.set_xticklabels(ax.get_xticklabels(), rotation=90, fontsize = 10)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "je56zj585Gx6"
   },
   "source": [
    "<a id='Feature_Engineering'></a>\n",
    "### 4.1.8 Feature Engineering\n",
    "\n",
    "Create a new feature 'region' by combining the cities."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "czdVbF5c5Gx7"
   },
   "source": [
    "**There are 91 unique cities. We will divide these cities into North-East, West, Mid-West, and South regions.**"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "8FPtYo7X5Gx7"
   },
   "source": [
    "Let's create a new variable region. We will replace the original variable `city` with it."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {
    "id": "O0bzPxPX5Gx7"
   },
   "outputs": [],
   "source": [
    "# create a region column and combine the north-east cities\n",
    "df_insurance['region'] = df_insurance['city'].replace(['NewYork', 'Boston', 'Phildelphia', 'Pittsburg', 'Buffalo',\n",
    "                                                       'AtlanticCity','Portland', 'Cambridge', 'Hartford', \n",
    "                                                       'Springfield', 'Syracuse', 'Baltimore', 'York', 'Trenton',\n",
    "                                                       'Warwick', 'WashingtonDC', 'Providence', 'Harrisburg',\n",
    "                                                       'Newport', 'Stamford', 'Worcester'],\n",
    "                                                      'North-East')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {
    "id": "2vUSXySi5Gx8"
   },
   "outputs": [],
   "source": [
    "# combine all the southern cities into the 'region' column\n",
    "df_insurance['region'] = df_insurance['region'].replace(['Atlanta', 'Brimingham', 'Charleston', 'Charlotte',\n",
    "                                                         'Louisville', 'Memphis', 'Nashville', 'NewOrleans',\n",
    "                                                         'Raleigh', 'Houston', 'Georgia', 'Oklahoma', 'Orlando',\n",
    "                                                         'Macon', 'Huntsville', 'Knoxville', 'Florence', 'Miami',\n",
    "                                                         'Tampa', 'PanamaCity', 'Kingsport', 'Marshall'],\n",
    "                                                         'Southern')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {
    "id": "1RAW4vbd5Gx8"
   },
   "outputs": [],
   "source": [
    "# combine all the mid-west cities into the 'region' column\n",
    "df_insurance['region'] = df_insurance['region'].replace(['Mandan', 'Waterloo', 'IowaCity', 'Columbia',\n",
    "                                                         'Indianapolis', 'Cincinnati', 'Bloomington', 'Salina',\n",
    "                                                         'KanasCity', 'Brookings', 'Minot', 'Chicago', 'Lincoln',\n",
    "                                                         'FallsCity', 'GrandForks', 'Fargo', 'Cleveland', \n",
    "                                                         'Canton', 'Columbus', 'Rochester', 'Minneapolis', \n",
    "                                                         'JeffersonCity', 'Escabana','Youngstown'],\n",
    "                                                         'Mid-West')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {
    "id": "zbTXDrnV5Gx8"
   },
   "outputs": [],
   "source": [
    "# combine all the western cities into the 'region' column\n",
    "df_insurance['region'] = df_insurance['region'].replace(['SantaRosa', 'Eureka', 'SanFrancisco', 'SanJose',\n",
    "                                                         'LosAngeles', 'Oxnard', 'SanDeigo', 'Oceanside', \n",
    "                                                         'Carlsbad', 'Montrose', 'Prescott', 'Fresno', 'Reno',\n",
    "                                                         'LasVegas', 'Tucson', 'SanLuis', 'Denver', 'Kingman',\n",
    "                                                         'Bakersfield', 'Mexicali', 'SilverCity', 'Pheonix',\n",
    "                                                         'SantaFe', 'Lovelock'],\n",
    "                                                         'West')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {
    "id": "vZyWWp_j5Gx9",
    "outputId": "1f375a46-474b-47fd-d071-39e185e3beee"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['North-East', 'Southern', 'Mid-West', 'West'], dtype=object)"
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# check the unique values of the region using 'unique()'\n",
    "df_insurance['region'].unique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {
    "id": "UKedbX6_5Gx9",
    "outputId": "0a1c2c7b-ac3b-4300-c601-99fb1e1feb7c"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Southern      4444\n",
       "West          4273\n",
       "North-East    3471\n",
       "Mid-West      2812\n",
       "Name: region, dtype: int64"
      ]
     },
     "execution_count": 32,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_insurance['region'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {
    "id": "gIrHJTww5Gx-"
   },
   "outputs": [],
   "source": [
    "# drop the 'city' variable from the dataset using drop()\n",
    "df_insurance = df_insurance.drop(['city'], axis=1)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "MwmW6GQw5Gx-"
   },
   "source": [
    "Check whether the new variable added into the data frame or not."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {
    "id": "jLGYc9Wt5Gx-",
    "outputId": "08a746e0-f53b-48d1-e052-60485db257a6",
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>age</th>\n",
       "      <th>sex</th>\n",
       "      <th>weight</th>\n",
       "      <th>bmi</th>\n",
       "      <th>hereditary_diseases</th>\n",
       "      <th>no_of_dependents</th>\n",
       "      <th>smoker</th>\n",
       "      <th>bloodpressure</th>\n",
       "      <th>diabetes</th>\n",
       "      <th>regular_ex</th>\n",
       "      <th>job_title</th>\n",
       "      <th>claim</th>\n",
       "      <th>region</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>60.000000</td>\n",
       "      <td>male</td>\n",
       "      <td>64</td>\n",
       "      <td>24.300000</td>\n",
       "      <td>NoDisease</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>72</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>Actor</td>\n",
       "      <td>13112.600000</td>\n",
       "      <td>North-East</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>49.000000</td>\n",
       "      <td>female</td>\n",
       "      <td>75</td>\n",
       "      <td>22.600000</td>\n",
       "      <td>NoDisease</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>78</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>Engineer</td>\n",
       "      <td>9567.000000</td>\n",
       "      <td>North-East</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>32.000000</td>\n",
       "      <td>female</td>\n",
       "      <td>64</td>\n",
       "      <td>17.800000</td>\n",
       "      <td>Epilepsy</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>88</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>Academician</td>\n",
       "      <td>32734.200000</td>\n",
       "      <td>North-East</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>61.000000</td>\n",
       "      <td>female</td>\n",
       "      <td>53</td>\n",
       "      <td>36.400000</td>\n",
       "      <td>NoDisease</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>72</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>Chef</td>\n",
       "      <td>48517.600000</td>\n",
       "      <td>North-East</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>19.000000</td>\n",
       "      <td>female</td>\n",
       "      <td>50</td>\n",
       "      <td>20.600000</td>\n",
       "      <td>NoDisease</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>82</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>HomeMakers</td>\n",
       "      <td>1731.700000</td>\n",
       "      <td>North-East</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "        age     sex  weight       bmi hereditary_diseases  no_of_dependents  \\\n",
       "0 60.000000    male      64 24.300000           NoDisease                 1   \n",
       "1 49.000000  female      75 22.600000           NoDisease                 1   \n",
       "2 32.000000  female      64 17.800000            Epilepsy                 2   \n",
       "3 61.000000  female      53 36.400000           NoDisease                 1   \n",
       "4 19.000000  female      50 20.600000           NoDisease                 0   \n",
       "\n",
       "  smoker  bloodpressure diabetes regular_ex    job_title        claim  \\\n",
       "0      0             72        0          0        Actor 13112.600000   \n",
       "1      0             78        1          1     Engineer  9567.000000   \n",
       "2      1             88        1          1  Academician 32734.200000   \n",
       "3      1             72        1          0         Chef 48517.600000   \n",
       "4      0             82        1          0   HomeMakers  1731.700000   \n",
       "\n",
       "       region  \n",
       "0  North-East  \n",
       "1  North-East  \n",
       "2  North-East  \n",
       "3  North-East  \n",
       "4  North-East  "
      ]
     },
     "execution_count": 34,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# display the top 5 rows of the dataframe\n",
    "df_insurance.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "KlMSxRrR5Gx_"
   },
   "source": [
    "#### Analyze relationship between region and claim variable"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {
    "id": "Tipw3opG5Gx_",
    "outputId": "420ca430-3215-451f-da21-4e9ea7114711"
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1080x576 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# set figure size\n",
    "plt.figure(figsize=(15,8))\n",
    "ax = sns.boxplot(x=\"region\", y=\"claim\", data=df_insurance)\n",
    "ax.set_xticklabels(labels=ax.get_xticklabels(), rotation=90)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "FDcnzXxL5Gx_"
   },
   "source": [
    "The plot shows that there is not much significant difference in the variance of the insurance claim across the regions."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "n7PHYrrN5GyA"
   },
   "source": [
    "<a id='outliers'></a>\n",
    "### 4.1.9 Discover Outliers"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "3oMd1qk55GyB"
   },
   "source": [
    "**1. Plot boxplot for numerical data**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {
    "id": "5Jqg0NpK5GyB",
    "outputId": "78fe1fac-f4a3-4619-fd0b-4536a62920de",
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1080x576 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.rcParams['figure.figsize']=(15,8)\n",
    "df_numeric_features.boxplot(column=['bmi', 'weight','no_of_dependents', 'bloodpressure', 'age'])\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "dfw19mto5GyC"
   },
   "source": [
    "**2. Note the variables for which outliers are present**"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "From the above plot, we notice that for the variable 'bmi' and 'bloodpressure' contain outliers"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "_W3lhNO35GyE"
   },
   "source": [
    "**3. Remove outliers by IQR method**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {
    "id": "Ms0DVofi5GyE",
    "outputId": "461c51ea-1939-4851-8bd0-1c88627485d3"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "age                24.000000\n",
      "weight             22.000000\n",
      "bmi                 8.200000\n",
      "no_of_dependents    2.000000\n",
      "bloodpressure      16.000000\n",
      "dtype: float64\n"
     ]
    }
   ],
   "source": [
    "# calculate interquartile range \n",
    "\n",
    "# compute the first quartile using quantile(0.25)\n",
    "# use .drop() to drop the target variable \n",
    "Q1 = df_numeric_features.drop(['claim'], axis=1).quantile(0.25)\n",
    "\n",
    "# compute the first quartile using quantile(0.75)\n",
    "# use .drop() to drop the target variable \n",
    "Q3 = df_numeric_features.drop(['claim'], axis=1).quantile(0.75)\n",
    "\n",
    "# calculate of interquartile range \n",
    "IQR = Q3 - Q1\n",
    "print(IQR)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {
    "id": "tN9cRkE55GyE"
   },
   "outputs": [],
   "source": [
    "# filter out the outlier values\n",
    "# ~ : selects all rows which do not satisfy the condition\n",
    "# |: bitwise operator OR in python\n",
    "# any() : returns whether any element is True over the columns\n",
    "# axis : \"1\" indicates columns should be altered (use \"0\" for 'index')\n",
    "df_insurance = df_insurance[~((df_insurance < (Q1 - 1.5 * IQR)) | (df_insurance > (Q3 + 1.5 * IQR))).any(axis=1)]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "cNn-ZUWV5GyF"
   },
   "source": [
    "A simple way to know whether the outliers have been removed or not is to check the dimensions of the data. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "metadata": {
    "id": "070YfXH15GyF",
    "outputId": "a2673625-1687-4dc2-90a0-9c667f380a90",
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(14723, 13)"
      ]
     },
     "execution_count": 39,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# check the shape of data using shape\n",
    "df_insurance.shape"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "There is a reduction in the number of rows(from 15000 to 14723)."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "1EQfqQEI5GyG"
   },
   "source": [
    "**4. Plot boxplot to recheck for outliers**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "metadata": {
    "id": "6r0c3x2Q5GyH",
    "outputId": "cf11d9d8-57d2-441b-84af-e2f84143da8f",
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1080x576 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.rcParams['figure.figsize']=(15,8)\n",
    "\n",
    "df_insurance.boxplot(column=['bmi', 'weight','no_of_dependents', 'bloodpressure', 'age'])\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "TUPwF_xv5GyH"
   },
   "source": [
    "Observing the range of the boxplot, we say that the outliers are removed from the original data. The new 'outliers' that you see are moderate outliers that lie within the min/max range before removing the actual outliers"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "xtajOSPx5GyH"
   },
   "source": [
    "### 4.1.10 Recheck the Correlation"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "metadata": {
    "id": "JXEGrvEM5GyI",
    "outputId": "dfde62f9-056d-4a47-e15b-0aea8110fad1"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['age', 'weight', 'bmi', 'no_of_dependents', 'bloodpressure', 'claim'], dtype='object')"
      ]
     },
     "execution_count": 41,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_numeric_features = df_insurance.select_dtypes(include=np.number)\n",
    "df_numeric_features.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "metadata": {
    "id": "OpNp0iUn5GyJ",
    "outputId": "7bc40f0b-e89d-4672-91e6-1265adb0ed76"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>age</th>\n",
       "      <th>weight</th>\n",
       "      <th>bmi</th>\n",
       "      <th>no_of_dependents</th>\n",
       "      <th>bloodpressure</th>\n",
       "      <th>claim</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>age</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.282136</td>\n",
       "      <td>0.196479</td>\n",
       "      <td>0.056423</td>\n",
       "      <td>0.023431</td>\n",
       "      <td>0.301544</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>weight</th>\n",
       "      <td>0.282136</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.237473</td>\n",
       "      <td>0.134033</td>\n",
       "      <td>0.009877</td>\n",
       "      <td>0.080363</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>bmi</th>\n",
       "      <td>0.196479</td>\n",
       "      <td>0.237473</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.044997</td>\n",
       "      <td>-0.055260</td>\n",
       "      <td>0.196193</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>no_of_dependents</th>\n",
       "      <td>0.056423</td>\n",
       "      <td>0.134033</td>\n",
       "      <td>0.044997</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.027358</td>\n",
       "      <td>0.077775</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>bloodpressure</th>\n",
       "      <td>0.023431</td>\n",
       "      <td>0.009877</td>\n",
       "      <td>-0.055260</td>\n",
       "      <td>0.027358</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.036679</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>claim</th>\n",
       "      <td>0.301544</td>\n",
       "      <td>0.080363</td>\n",
       "      <td>0.196193</td>\n",
       "      <td>0.077775</td>\n",
       "      <td>0.036679</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                      age   weight       bmi  no_of_dependents  bloodpressure  \\\n",
       "age              1.000000 0.282136  0.196479          0.056423       0.023431   \n",
       "weight           0.282136 1.000000  0.237473          0.134033       0.009877   \n",
       "bmi              0.196479 0.237473  1.000000          0.044997      -0.055260   \n",
       "no_of_dependents 0.056423 0.134033  0.044997          1.000000       0.027358   \n",
       "bloodpressure    0.023431 0.009877 -0.055260          0.027358       1.000000   \n",
       "claim            0.301544 0.080363  0.196193          0.077775       0.036679   \n",
       "\n",
       "                    claim  \n",
       "age              0.301544  \n",
       "weight           0.080363  \n",
       "bmi              0.196193  \n",
       "no_of_dependents 0.077775  \n",
       "bloodpressure    0.036679  \n",
       "claim            1.000000  "
      ]
     },
     "execution_count": 42,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "\n",
    "corr =  df_numeric_features.corr()\n",
    "\n",
    "# print the correlation matrix\n",
    "corr"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "KN6zOCXq5GyK"
   },
   "source": [
    "**3. Pass the correlation matrix to the heatmap() function of the seaborn library to plot the heatmap of the correlation matrix**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "metadata": {
    "id": "L93paPnm5GyK",
    "outputId": "c238d5d3-574b-410e-a03c-9cfedf8e14ad",
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1080x576 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(15, 8))\n",
    "\n",
    "sns.heatmap(corr, cmap='YlGnBu', vmax=1.0, vmin=-1.0, annot = True, annot_kws={\"size\": 15})\n",
    "plt.title('Correlation between numeric features')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**4. Check multicollinearity using VIF**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>VIF_Value</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>const</th>\n",
       "      <td>91.123639</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>weight</th>\n",
       "      <td>1.145123</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>age</th>\n",
       "      <td>1.109198</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>bmi</th>\n",
       "      <td>1.085094</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>no_of_dependents</th>\n",
       "      <td>1.019531</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>bloodpressure</th>\n",
       "      <td>1.005250</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                  VIF_Value\n",
       "const             91.123639\n",
       "weight             1.145123\n",
       "age                1.109198\n",
       "bmi                1.085094\n",
       "no_of_dependents   1.019531\n",
       "bloodpressure      1.005250"
      ]
     },
     "execution_count": 44,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_numeric_X =  df_numeric_features.drop('claim',axis=1)\n",
    "df_numeric_X = sm.add_constant(df_numeric_X)\n",
    "vif_value = [VIF(df_numeric_X.values, i) for i in range(df_numeric_X.shape[1])]\n",
    "pd.DataFrame(vif_value, columns=['VIF_Value'], index=df_numeric_X.columns).sort_values('VIF_Value', ascending=False)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "VIF Values indicate that there is no multi collinearity"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "t5K9zCzs5GyM"
   },
   "source": [
    "<a id='Data_Preparation'></a>\n",
    "## 4.2 Prepare the Data"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "b9eYO3Ms5GyM"
   },
   "source": [
    "<a id='Normality'></a>\n",
    "### 4.2.1 Check for Normality"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "pFyAW5fE5GyN"
   },
   "source": [
    "As per the assumptions of linear regression, residuals (actual values - predicted values) should be normally distributed. If the target variable is normally distributed then the residuals are also normally distributed, thus we check the normality only for target variable."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "y4J6kGgf5GyO"
   },
   "source": [
    "**1. Plot a histogram and also perform the Jarque-Bera test**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "metadata": {
    "id": "HoF_r1vF5GyP",
    "outputId": "ce49476f-ec47-487c-e950-9f6ba38d2cf9"
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1080x576 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "df_insurance.claim.hist()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "oT7BUpzl5GyR"
   },
   "source": [
    "Let us perform the Jarque-Bera test to check the normality of the target variable."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "metadata": {
    "id": "oh7KkbHP5GyR",
    "outputId": "c030d65b-7297-4f04-98e6-7011991acd49"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Statistics=6571.030, p-value=0.000\n",
      "The data is not normally distributed (reject H0)\n"
     ]
    }
   ],
   "source": [
    "# normality test using jarque_bera()\n",
    "#The null and alternate hypothesis of Jarque-Bera test are as follows: <br>\n",
    "#    H0: The data is normally distributed\n",
    "#    H1: The data is not normally distributed\n",
    "# the test returns the the test statistics and the p-value of the test\n",
    "stat, p = jarque_bera(df_insurance[\"claim\"])\n",
    "print('Statistics=%.3f, p-value=%.3f' % (stat, p))\n",
    "alpha = 0.05\n",
    "if p > alpha:\n",
    "    print('The data is normally distributed (fail to reject H0)')\n",
    "else:\n",
    "    print('The data is not normally distributed (reject H0)')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "tr6HbUNe5GyT"
   },
   "source": [
    "**2. If the data is not normally distributed, use log transformation to get near normally distributed data**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "metadata": {
    "id": "l_2xCMDW5GyT",
    "outputId": "49d3986b-baf8-4970-a26e-466357fa971c"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>age</th>\n",
       "      <th>sex</th>\n",
       "      <th>weight</th>\n",
       "      <th>bmi</th>\n",
       "      <th>hereditary_diseases</th>\n",
       "      <th>no_of_dependents</th>\n",
       "      <th>smoker</th>\n",
       "      <th>bloodpressure</th>\n",
       "      <th>diabetes</th>\n",
       "      <th>regular_ex</th>\n",
       "      <th>job_title</th>\n",
       "      <th>claim</th>\n",
       "      <th>region</th>\n",
       "      <th>log_claim</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>60.000000</td>\n",
       "      <td>male</td>\n",
       "      <td>64</td>\n",
       "      <td>24.300000</td>\n",
       "      <td>NoDisease</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>72</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>Actor</td>\n",
       "      <td>13112.600000</td>\n",
       "      <td>North-East</td>\n",
       "      <td>9.481329</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>49.000000</td>\n",
       "      <td>female</td>\n",
       "      <td>75</td>\n",
       "      <td>22.600000</td>\n",
       "      <td>NoDisease</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>78</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>Engineer</td>\n",
       "      <td>9567.000000</td>\n",
       "      <td>North-East</td>\n",
       "      <td>9.166075</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>32.000000</td>\n",
       "      <td>female</td>\n",
       "      <td>64</td>\n",
       "      <td>17.800000</td>\n",
       "      <td>Epilepsy</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>88</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>Academician</td>\n",
       "      <td>32734.200000</td>\n",
       "      <td>North-East</td>\n",
       "      <td>10.396176</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>61.000000</td>\n",
       "      <td>female</td>\n",
       "      <td>53</td>\n",
       "      <td>36.400000</td>\n",
       "      <td>NoDisease</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>72</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>Chef</td>\n",
       "      <td>48517.600000</td>\n",
       "      <td>North-East</td>\n",
       "      <td>10.789682</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>19.000000</td>\n",
       "      <td>female</td>\n",
       "      <td>50</td>\n",
       "      <td>20.600000</td>\n",
       "      <td>NoDisease</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>82</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>HomeMakers</td>\n",
       "      <td>1731.700000</td>\n",
       "      <td>North-East</td>\n",
       "      <td>7.456859</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "        age     sex  weight       bmi hereditary_diseases  no_of_dependents  \\\n",
       "0 60.000000    male      64 24.300000           NoDisease                 1   \n",
       "1 49.000000  female      75 22.600000           NoDisease                 1   \n",
       "2 32.000000  female      64 17.800000            Epilepsy                 2   \n",
       "3 61.000000  female      53 36.400000           NoDisease                 1   \n",
       "4 19.000000  female      50 20.600000           NoDisease                 0   \n",
       "\n",
       "  smoker  bloodpressure diabetes regular_ex    job_title        claim  \\\n",
       "0      0             72        0          0        Actor 13112.600000   \n",
       "1      0             78        1          1     Engineer  9567.000000   \n",
       "2      1             88        1          1  Academician 32734.200000   \n",
       "3      1             72        1          0         Chef 48517.600000   \n",
       "4      0             82        1          0   HomeMakers  1731.700000   \n",
       "\n",
       "       region  log_claim  \n",
       "0  North-East   9.481329  \n",
       "1  North-East   9.166075  \n",
       "2  North-East  10.396176  \n",
       "3  North-East  10.789682  \n",
       "4  North-East   7.456859  "
      ]
     },
     "execution_count": 47,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# log transformation for normality using np.log()\n",
    "df_insurance['log_claim'] = np.log(df_insurance['claim'])\n",
    "df_insurance.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "AS_4YQdv5GyU"
   },
   "source": [
    "**3. Recheck for normality by plotting histogram and performing Jarque-Bera test**\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "metadata": {
    "id": "JpCJLE1D5GyU",
    "outputId": "52873735-2454-4a2a-b42d-8e1e88faeb32",
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1080x576 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# recheck for normality \n",
    "df_insurance.log_claim.hist()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The variable claim is near normally distributed. However we again confirm by Jarque Bera test"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "0yMoqSb85GyV"
   },
   "source": [
    "Let us perform Jarque Bera test"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "metadata": {
    "id": "mn_1gpUI5GyV",
    "outputId": "e59459ba-2b84-482c-d66e-51d3a1502ee4"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Statistics=6571.030, p-value=0.000\n",
      "The data is not normally distributed (reject H0)\n"
     ]
    }
   ],
   "source": [
    "\n",
    "statn, pv = jarque_bera(df_insurance['log_claim'])\n",
    "print('Statistics=%.3f, p-value=%.3f' % (stat, p))\n",
    "alpha = 0.05\n",
    "if p > alpha:\n",
    "    print('The data is normally distributed (fail to reject H0)')\n",
    "else:\n",
    "    print('The data is not normally distributed (reject H0)')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "It can be visually seen that the data has near-normal distribution, but Jarque Bera test does not support the claim.\n",
    "Note that in reality it might be very tough for your data to adhere to all assumptions your algorithm needs"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "88Lw1_Uq5GyW"
   },
   "source": [
    "\n",
    "### 4.2.2 One-Way Anova "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "bJ_Y3JQn5GyW"
   },
   "source": [
    "Perform One-Way ANOVA to compare two means from two independent (unrelated) groups. For example, we apply ANOVA to see whether the mean of claim is significantly different across gender\n",
    "\n",
    "The null and alternate hypothesis of one-way anova are as follows:\n",
    "\n",
    "    H0: Population means all are equal\n",
    "    H1: Population means are not all equal"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "F94HmKCF5GyW"
   },
   "source": [
    "#### One Way Anova for 'Sex' on 'Claim'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "metadata": {
    "id": "7HUqICta5GyX",
    "outputId": "26fe2bbd-b34c-466d-9bf2-6ecfaf09dd77"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "F_onewayResult(statistic=68.99835913263617, pvalue=1.070652488972223e-16)"
      ]
     },
     "execution_count": 50,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# perform one way anova for sex on claim using f_oneway()\n",
    "f_oneway(df_insurance['claim'][df_insurance['sex'] == 'male'], \n",
    "             df_insurance['claim'][df_insurance['sex'] == 'female'])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "mp1nN5pX5GyX"
   },
   "source": [
    "The F-statistic = 68.99 and the p-value < 0.05, which indicates that there is a significant difference in the mean of the insurance claim across gender. We may consider building separate models for each gender. However, in this example we go ahead and build a single model for both genders."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "UsRZ2DXZ5GyY"
   },
   "source": [
    "<a id='dummy'></a>\n",
    "### 4.2.3 Dummy Encoding of Categorical Variables"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "6UmUVfLO5GyZ"
   },
   "source": [
    "**1. Filter numerical and categorical variables**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "metadata": {
    "id": "ERic_JFk5Gya",
    "outputId": "6da2fd09-02e9-4760-a39e-7abe62cdef24"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['age', 'weight', 'bmi', 'no_of_dependents', 'bloodpressure', 'claim',\n",
       "       'log_claim'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 51,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# filter the numerical features in the dataset using select_dtypes()\n",
    "df_numeric_features = df_insurance.select_dtypes(include=np.number)\n",
    "df_numeric_features.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "metadata": {
    "id": "z9-1TSc05Gya",
    "outputId": "a928b957-30e2-4b06-8a7c-2cbda0c2a15b"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['sex', 'hereditary_diseases', 'smoker', 'diabetes', 'regular_ex',\n",
       "       'job_title', 'region'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 52,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# filter the categorical features in the dataset using select_dtypes()\n",
    "df_categoric_features = df_insurance.select_dtypes(include=[np.object])\n",
    "df_categoric_features.columns"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "gId60_MC5Gyb"
   },
   "source": [
    "**2. Dummy encode the catergorical variables**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "metadata": {
    "id": "FbsXmLT15Gyb"
   },
   "outputs": [],
   "source": [
    "# create data frame with only categorical variables that have been encoded\n",
    "\n",
    "# for all categoric variables create dummy variables\n",
    "for col in df_categoric_features.columns.values:\n",
    "    \n",
    "    dummy_encoded_variables = pd.get_dummies(df_categoric_features[col], prefix=col, drop_first=True)\n",
    "    \n",
    "    # concatenate the categoric features with dummy variables using concat()\n",
    "    df_categoric_features = pd.concat([df_categoric_features, dummy_encoded_variables],axis=1)\n",
    "    \n",
    "    # drop the orginal categorical variable from the dataframe\n",
    "    df_categoric_features.drop([col], axis=1, inplace=True)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "pXihs0Q65Gyb"
   },
   "source": [
    "**3. Concatenate numerical and dummy encoded categorical variables**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "metadata": {
    "id": "hiHGkxjw5Gyc",
    "outputId": "cc0bfc7c-ead5-4cac-86af-bd92e245d7e2"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>age</th>\n",
       "      <th>weight</th>\n",
       "      <th>bmi</th>\n",
       "      <th>no_of_dependents</th>\n",
       "      <th>bloodpressure</th>\n",
       "      <th>claim</th>\n",
       "      <th>log_claim</th>\n",
       "      <th>sex_male</th>\n",
       "      <th>hereditary_diseases_Arthritis</th>\n",
       "      <th>hereditary_diseases_Cancer</th>\n",
       "      <th>hereditary_diseases_Diabetes</th>\n",
       "      <th>hereditary_diseases_Epilepsy</th>\n",
       "      <th>hereditary_diseases_EyeDisease</th>\n",
       "      <th>hereditary_diseases_HeartDisease</th>\n",
       "      <th>hereditary_diseases_High BP</th>\n",
       "      <th>hereditary_diseases_NoDisease</th>\n",
       "      <th>hereditary_diseases_Obesity</th>\n",
       "      <th>smoker_1</th>\n",
       "      <th>diabetes_1</th>\n",
       "      <th>regular_ex_1</th>\n",
       "      <th>job_title_Accountant</th>\n",
       "      <th>job_title_Actor</th>\n",
       "      <th>job_title_Analyst</th>\n",
       "      <th>job_title_Architect</th>\n",
       "      <th>job_title_Beautician</th>\n",
       "      <th>job_title_Blogger</th>\n",
       "      <th>job_title_Buisnessman</th>\n",
       "      <th>job_title_CA</th>\n",
       "      <th>job_title_CEO</th>\n",
       "      <th>job_title_Chef</th>\n",
       "      <th>job_title_Clerks</th>\n",
       "      <th>job_title_Dancer</th>\n",
       "      <th>job_title_DataScientist</th>\n",
       "      <th>job_title_DefencePersonnels</th>\n",
       "      <th>job_title_Doctor</th>\n",
       "      <th>job_title_Engineer</th>\n",
       "      <th>job_title_Farmer</th>\n",
       "      <th>job_title_FashionDesigner</th>\n",
       "      <th>job_title_FilmDirector</th>\n",
       "      <th>job_title_FilmMaker</th>\n",
       "      <th>job_title_GovEmployee</th>\n",
       "      <th>job_title_HomeMakers</th>\n",
       "      <th>job_title_HouseKeeper</th>\n",
       "      <th>job_title_ITProfessional</th>\n",
       "      <th>job_title_Journalist</th>\n",
       "      <th>job_title_Labourer</th>\n",
       "      <th>job_title_Lawyer</th>\n",
       "      <th>job_title_Manager</th>\n",
       "      <th>job_title_Photographer</th>\n",
       "      <th>job_title_Police</th>\n",
       "      <th>job_title_Politician</th>\n",
       "      <th>job_title_Singer</th>\n",
       "      <th>job_title_Student</th>\n",
       "      <th>job_title_Technician</th>\n",
       "      <th>region_North-East</th>\n",
       "      <th>region_Southern</th>\n",
       "      <th>region_West</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>60.000000</td>\n",
       "      <td>64</td>\n",
       "      <td>24.300000</td>\n",
       "      <td>1</td>\n",
       "      <td>72</td>\n",
       "      <td>13112.600000</td>\n",
       "      <td>9.481329</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>49.000000</td>\n",
       "      <td>75</td>\n",
       "      <td>22.600000</td>\n",
       "      <td>1</td>\n",
       "      <td>78</td>\n",
       "      <td>9567.000000</td>\n",
       "      <td>9.166075</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>32.000000</td>\n",
       "      <td>64</td>\n",
       "      <td>17.800000</td>\n",
       "      <td>2</td>\n",
       "      <td>88</td>\n",
       "      <td>32734.200000</td>\n",
       "      <td>10.396176</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>61.000000</td>\n",
       "      <td>53</td>\n",
       "      <td>36.400000</td>\n",
       "      <td>1</td>\n",
       "      <td>72</td>\n",
       "      <td>48517.600000</td>\n",
       "      <td>10.789682</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>19.000000</td>\n",
       "      <td>50</td>\n",
       "      <td>20.600000</td>\n",
       "      <td>0</td>\n",
       "      <td>82</td>\n",
       "      <td>1731.700000</td>\n",
       "      <td>7.456859</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "        age  weight       bmi  no_of_dependents  bloodpressure        claim  \\\n",
       "0 60.000000      64 24.300000                 1             72 13112.600000   \n",
       "1 49.000000      75 22.600000                 1             78  9567.000000   \n",
       "2 32.000000      64 17.800000                 2             88 32734.200000   \n",
       "3 61.000000      53 36.400000                 1             72 48517.600000   \n",
       "4 19.000000      50 20.600000                 0             82  1731.700000   \n",
       "\n",
       "   log_claim  sex_male  hereditary_diseases_Arthritis  \\\n",
       "0   9.481329         1                              0   \n",
       "1   9.166075         0                              0   \n",
       "2  10.396176         0                              0   \n",
       "3  10.789682         0                              0   \n",
       "4   7.456859         0                              0   \n",
       "\n",
       "   hereditary_diseases_Cancer  hereditary_diseases_Diabetes  \\\n",
       "0                           0                             0   \n",
       "1                           0                             0   \n",
       "2                           0                             0   \n",
       "3                           0                             0   \n",
       "4                           0                             0   \n",
       "\n",
       "   hereditary_diseases_Epilepsy  hereditary_diseases_EyeDisease  \\\n",
       "0                             0                               0   \n",
       "1                             0                               0   \n",
       "2                             1                               0   \n",
       "3                             0                               0   \n",
       "4                             0                               0   \n",
       "\n",
       "   hereditary_diseases_HeartDisease  hereditary_diseases_High BP  \\\n",
       "0                                 0                            0   \n",
       "1                                 0                            0   \n",
       "2                                 0                            0   \n",
       "3                                 0                            0   \n",
       "4                                 0                            0   \n",
       "\n",
       "   hereditary_diseases_NoDisease  hereditary_diseases_Obesity  smoker_1  \\\n",
       "0                              1                            0         0   \n",
       "1                              1                            0         0   \n",
       "2                              0                            0         1   \n",
       "3                              1                            0         1   \n",
       "4                              1                            0         0   \n",
       "\n",
       "   diabetes_1  regular_ex_1  job_title_Accountant  job_title_Actor  \\\n",
       "0           0             0                     0                1   \n",
       "1           1             1                     0                0   \n",
       "2           1             1                     0                0   \n",
       "3           1             0                     0                0   \n",
       "4           1             0                     0                0   \n",
       "\n",
       "   job_title_Analyst  job_title_Architect  job_title_Beautician  \\\n",
       "0                  0                    0                     0   \n",
       "1                  0                    0                     0   \n",
       "2                  0                    0                     0   \n",
       "3                  0                    0                     0   \n",
       "4                  0                    0                     0   \n",
       "\n",
       "   job_title_Blogger  job_title_Buisnessman  job_title_CA  job_title_CEO  \\\n",
       "0                  0                      0             0              0   \n",
       "1                  0                      0             0              0   \n",
       "2                  0                      0             0              0   \n",
       "3                  0                      0             0              0   \n",
       "4                  0                      0             0              0   \n",
       "\n",
       "   job_title_Chef  job_title_Clerks  job_title_Dancer  \\\n",
       "0               0                 0                 0   \n",
       "1               0                 0                 0   \n",
       "2               0                 0                 0   \n",
       "3               1                 0                 0   \n",
       "4               0                 0                 0   \n",
       "\n",
       "   job_title_DataScientist  job_title_DefencePersonnels  job_title_Doctor  \\\n",
       "0                        0                            0                 0   \n",
       "1                        0                            0                 0   \n",
       "2                        0                            0                 0   \n",
       "3                        0                            0                 0   \n",
       "4                        0                            0                 0   \n",
       "\n",
       "   job_title_Engineer  job_title_Farmer  job_title_FashionDesigner  \\\n",
       "0                   0                 0                          0   \n",
       "1                   1                 0                          0   \n",
       "2                   0                 0                          0   \n",
       "3                   0                 0                          0   \n",
       "4                   0                 0                          0   \n",
       "\n",
       "   job_title_FilmDirector  job_title_FilmMaker  job_title_GovEmployee  \\\n",
       "0                       0                    0                      0   \n",
       "1                       0                    0                      0   \n",
       "2                       0                    0                      0   \n",
       "3                       0                    0                      0   \n",
       "4                       0                    0                      0   \n",
       "\n",
       "   job_title_HomeMakers  job_title_HouseKeeper  job_title_ITProfessional  \\\n",
       "0                     0                      0                         0   \n",
       "1                     0                      0                         0   \n",
       "2                     0                      0                         0   \n",
       "3                     0                      0                         0   \n",
       "4                     1                      0                         0   \n",
       "\n",
       "   job_title_Journalist  job_title_Labourer  job_title_Lawyer  \\\n",
       "0                     0                   0                 0   \n",
       "1                     0                   0                 0   \n",
       "2                     0                   0                 0   \n",
       "3                     0                   0                 0   \n",
       "4                     0                   0                 0   \n",
       "\n",
       "   job_title_Manager  job_title_Photographer  job_title_Police  \\\n",
       "0                  0                       0                 0   \n",
       "1                  0                       0                 0   \n",
       "2                  0                       0                 0   \n",
       "3                  0                       0                 0   \n",
       "4                  0                       0                 0   \n",
       "\n",
       "   job_title_Politician  job_title_Singer  job_title_Student  \\\n",
       "0                     0                 0                  0   \n",
       "1                     0                 0                  0   \n",
       "2                     0                 0                  0   \n",
       "3                     0                 0                  0   \n",
       "4                     0                 0                  0   \n",
       "\n",
       "   job_title_Technician  region_North-East  region_Southern  region_West  \n",
       "0                     0                  1                0            0  \n",
       "1                     0                  1                0            0  \n",
       "2                     0                  1                0            0  \n",
       "3                     0                  1                0            0  \n",
       "4                     0                  1                0            0  "
      ]
     },
     "execution_count": 54,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# concatenate the numerical and dummy encoded categorical variables using concat()\n",
    "# axis=1: specifies that the concatenation is column wise\n",
    "df_insurance_dummy = pd.concat([df_numeric_features, df_categoric_features], axis=1)\n",
    "\n",
    "# display data with dummy variables\n",
    "df_insurance_dummy.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "KqxK_Cdt5Gye"
   },
   "source": [
    "<a id='LinearRegression'></a>\n",
    "## 5. Linear Regression (OLS)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "rQWRjs7U5Gyf"
   },
   "source": [
    "<a id='withLog'></a>\n",
    "### 5.1 Multiple Linear Regression - Full Model - with Log Transformed Dependent Variable (OLS)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "VofLhXtt5Gyh"
   },
   "source": [
    "**1. Split the data into training and test sets**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "metadata": {
    "id": "1hkfwE8o5Gyh",
    "outputId": "2d030a8a-d67c-477c-8a28-74c4b640bfb9"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The shape of X_train is: (11042, 56)\n",
      "The shape of X_test is: (3681, 56)\n",
      "The shape of y_train is: (11042, 2)\n",
      "The shape of y_test is: (3681, 2)\n"
     ]
    }
   ],
   "source": [
    "# add the intercept column to the dataset\n",
    "df_insurance_dummy = sm.add_constant(df_insurance_dummy)\n",
    "\n",
    "# Define X and Y\n",
    "X = df_insurance_dummy.drop(['claim','log_claim'], axis=1)\n",
    "y = df_insurance_dummy[['log_claim','claim']]\n",
    "\n",
    "X_train, X_test, y_train, y_test = train_test_split(X, y, random_state=1)\n",
    "\n",
    "# check the dimensions of the train & test subset for \n",
    "print(\"The shape of X_train is:\",X_train.shape)\n",
    "print(\"The shape of X_test is:\",X_test.shape)\n",
    "print(\"The shape of y_train is:\",y_train.shape)\n",
    "print(\"The shape of y_test is:\",y_test.shape)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "VzWd0vZL5Gyi"
   },
   "source": [
    "**2. Build model using sm.OLS().fit()**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "metadata": {
    "id": "d49h7Ljm5Gyi",
    "outputId": "e5ff69e5-0385-4e4f-c1ec-48435390b07f",
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                            OLS Regression Results                            \n",
      "==============================================================================\n",
      "Dep. Variable:              log_claim   R-squared:                       0.745\n",
      "Model:                            OLS   Adj. R-squared:                  0.744\n",
      "Method:                 Least Squares   F-statistic:                     584.1\n",
      "Date:                Sun, 16 Oct 2022   Prob (F-statistic):               0.00\n",
      "Time:                        08:56:03   Log-Likelihood:                -7083.9\n",
      "No. Observations:               11042   AIC:                         1.428e+04\n",
      "Df Residuals:                   10986   BIC:                         1.469e+04\n",
      "Df Model:                          55                                         \n",
      "Covariance Type:            nonrobust                                         \n",
      "====================================================================================================\n",
      "                                       coef    std err          t      P>|t|      [0.025      0.975]\n",
      "----------------------------------------------------------------------------------------------------\n",
      "const                                7.6235      0.070    108.530      0.000       7.486       7.761\n",
      "age                                  0.0333      0.000     93.222      0.000       0.033       0.034\n",
      "weight                              -0.0003      0.000     -0.817      0.414      -0.001       0.000\n",
      "bmi                                  0.0087      0.001     10.366      0.000       0.007       0.010\n",
      "no_of_dependents                     0.0925      0.004     25.083      0.000       0.085       0.100\n",
      "bloodpressure                        0.0015      0.000      3.490      0.000       0.001       0.002\n",
      "sex_male                            -0.0827      0.009     -9.045      0.000      -0.101      -0.065\n",
      "hereditary_diseases_Arthritis        0.1930      0.068      2.841      0.005       0.060       0.326\n",
      "hereditary_diseases_Cancer          -0.2820      0.068     -4.150      0.000      -0.415      -0.149\n",
      "hereditary_diseases_Diabetes        -0.2340      0.064     -3.649      0.000      -0.360      -0.108\n",
      "hereditary_diseases_Epilepsy        -0.2272      0.075     -3.010      0.003      -0.375      -0.079\n",
      "hereditary_diseases_EyeDisease      -0.2662      0.068     -3.920      0.000      -0.399      -0.133\n",
      "hereditary_diseases_HeartDisease    -0.0597      0.073     -0.817      0.414      -0.203       0.084\n",
      "hereditary_diseases_High BP         -0.4212      0.080     -5.293      0.000      -0.577      -0.265\n",
      "hereditary_diseases_NoDisease       -0.6365      0.045    -14.065      0.000      -0.725      -0.548\n",
      "hereditary_diseases_Obesity         -0.2517      0.062     -4.030      0.000      -0.374      -0.129\n",
      "smoker_1                             1.3349      0.013    103.875      0.000       1.310       1.360\n",
      "diabetes_1                           0.0674      0.011      6.233      0.000       0.046       0.089\n",
      "regular_ex_1                         0.0134      0.011      1.240      0.215      -0.008       0.035\n",
      "job_title_Accountant                 0.1044      0.042      2.500      0.012       0.023       0.186\n",
      "job_title_Actor                      0.0389      0.037      1.062      0.288      -0.033       0.111\n",
      "job_title_Analyst                   -0.0208      0.045     -0.462      0.644      -0.109       0.068\n",
      "job_title_Architect                  0.0452      0.042      1.066      0.287      -0.038       0.128\n",
      "job_title_Beautician                 0.0860      0.042      2.051      0.040       0.004       0.168\n",
      "job_title_Blogger                   -0.0688      0.045     -1.535      0.125      -0.157       0.019\n",
      "job_title_Buisnessman                0.0428      0.047      0.910      0.363      -0.049       0.135\n",
      "job_title_CA                         0.0455      0.045      1.003      0.316      -0.043       0.134\n",
      "job_title_CEO                        0.0336      0.041      0.818      0.413      -0.047       0.114\n",
      "job_title_Chef                      -0.0574      0.045     -1.264      0.206      -0.146       0.032\n",
      "job_title_Clerks                     0.1096      0.042      2.628      0.009       0.028       0.191\n",
      "job_title_Dancer                     0.0440      0.037      1.183      0.237      -0.029       0.117\n",
      "job_title_DataScientist              0.0649      0.043      1.526      0.127      -0.018       0.148\n",
      "job_title_DefencePersonnels          0.0184      0.044      0.418      0.676      -0.068       0.104\n",
      "job_title_Doctor                     0.1386      0.044      3.161      0.002       0.053       0.225\n",
      "job_title_Engineer                   0.1549      0.042      3.728      0.000       0.073       0.236\n",
      "job_title_Farmer                     0.0220      0.046      0.477      0.634      -0.069       0.113\n",
      "job_title_FashionDesigner            0.0859      0.041      2.084      0.037       0.005       0.167\n",
      "job_title_FilmDirector               0.0609      0.045      1.359      0.174      -0.027       0.149\n",
      "job_title_FilmMaker                  0.0747      0.037      2.019      0.044       0.002       0.147\n",
      "job_title_GovEmployee                0.0368      0.047      0.785      0.432      -0.055       0.129\n",
      "job_title_HomeMakers                 0.0618      0.035      1.754      0.079      -0.007       0.131\n",
      "job_title_HouseKeeper                0.0074      0.037      0.200      0.842      -0.065       0.080\n",
      "job_title_ITProfessional             0.0226      0.042      0.540      0.589      -0.059       0.105\n",
      "job_title_Journalist                 0.0464      0.045      1.030      0.303      -0.042       0.135\n",
      "job_title_Labourer                  -0.0540      0.049     -1.106      0.269      -0.150       0.042\n",
      "job_title_Lawyer                     0.0881      0.044      2.014      0.044       0.002       0.174\n",
      "job_title_Manager                    0.1689      0.038      4.469      0.000       0.095       0.243\n",
      "job_title_Photographer               0.3295      0.041      8.003      0.000       0.249       0.410\n",
      "job_title_Police                     0.0029      0.041      0.070      0.944      -0.077       0.082\n",
      "job_title_Politician                 0.1565      0.042      3.742      0.000       0.075       0.238\n",
      "job_title_Singer                     0.0418      0.037      1.138      0.255      -0.030       0.114\n",
      "job_title_Student                    0.0015      0.035      0.044      0.965      -0.066       0.069\n",
      "job_title_Technician                -0.0601      0.044     -1.350      0.177      -0.147       0.027\n",
      "region_North-East                   -0.0042      0.014     -0.306      0.759      -0.031       0.023\n",
      "region_Southern                     -0.0076      0.013     -0.585      0.559      -0.033       0.018\n",
      "region_West                         -0.0102      0.013     -0.778      0.437      -0.036       0.015\n",
      "==============================================================================\n",
      "Omnibus:                     3177.176   Durbin-Watson:                   2.008\n",
      "Prob(Omnibus):                  0.000   Jarque-Bera (JB):             9635.687\n",
      "Skew:                           1.489   Prob(JB):                         0.00\n",
      "Kurtosis:                       6.475   Cond. No.                     4.61e+03\n",
      "==============================================================================\n",
      "\n",
      "Notes:\n",
      "[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n",
      "[2] The condition number is large, 4.61e+03. This might indicate that there are\n",
      "strong multicollinearity or other numerical problems.\n"
     ]
    }
   ],
   "source": [
    "# build a full model using OLS()\n",
    "# consider the log of claim \n",
    "linreg_full_model_withlog = sm.OLS(y_train[\"log_claim\"], X_train).fit()\n",
    "\n",
    "print(linreg_full_model_withlog.summary())"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "LNr_ZUUz5Gyl"
   },
   "source": [
    "**3. Predict the values using test set**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "metadata": {
    "id": "nhwLGlJq5Gyl"
   },
   "outputs": [],
   "source": [
    "# predict the 'log_claim' using predict()\n",
    "linreg_full_model_withlog_predictions = linreg_full_model_withlog.predict(X_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "metadata": {
    "id": "op2CkjPy5Gyl"
   },
   "outputs": [],
   "source": [
    "# Note that the predicted values are log transformed claim. \n",
    "# In order to get claim values, we take the antilog of these predicted values by using the function np.exp()\n",
    "\n",
    "predicted_claim = np.exp(linreg_full_model_withlog_predictions)\n",
    "\n",
    "\n",
    "# extract the 'claim' values from the test data\n",
    "actual_claim = y_test['claim']"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "xglcDNo05Gym"
   },
   "source": [
    "**4. Compute accuracy measures**\n",
    "\n",
    "Now we calculate accuray measures like Root-mean-square-error (RMSE), R-squared and Adjusted R-squared."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "metadata": {
    "id": "l36yzW4V5Gym"
   },
   "outputs": [],
   "source": [
    "# calculate rmse using rmse()\n",
    "linreg_full_model_withlog_rmse = rmse(actual_claim, predicted_claim)\n",
    "\n",
    "# calculate R-squared using rsquared\n",
    "linreg_full_model_withlog_rsquared = linreg_full_model_withlog.rsquared\n",
    "#linreg_full_model_withlog_test_rsquared = r2_score(actual_claim, predicted_claim)  #if we want test-RSqaured\n",
    "\n",
    "\n",
    "# calculate Adjusted R-Squared using rsquared_adj\n",
    "linreg_full_model_withlog_rsquared_adj = linreg_full_model_withlog.rsquared_adj \n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "U67oh3Q-5Gym"
   },
   "source": [
    "**5. Tabulate the results**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "metadata": {
    "id": "155m2Z6n5Gyn",
    "outputId": "58f9f5fb-0624-478b-e100-046e0c2d3ed0",
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Model_Name</th>\n",
       "      <th>R-Squared</th>\n",
       "      <th>Adj. R-Squared</th>\n",
       "      <th>RMSE</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "Empty DataFrame\n",
       "Columns: [Model_Name, R-Squared, Adj. R-Squared, RMSE]\n",
       "Index: []"
      ]
     },
     "execution_count": 60,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# create dataframe 'score_card'\n",
    "# columns: specifies the columns to be selected\n",
    "score_card = pd.DataFrame(columns=['Model_Name', 'R-Squared', 'Adj. R-Squared', 'RMSE'])\n",
    "#score_card = pd.DataFrame(columns=['Model_Name', 'R-Squared', 'Adj. R-Squared', 'Test_R-Squared', 'RMSE'])  # for Test-RSquared\n",
    "\n",
    "# print the score card\n",
    "score_card"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "metadata": {
    "id": "q8cZwkbt5Gyn",
    "outputId": "86bad964-8256-4434-fb58-bc5e7d44113e"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Model_Name</th>\n",
       "      <th>R-Squared</th>\n",
       "      <th>Adj. R-Squared</th>\n",
       "      <th>RMSE</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Linreg full model with log of target variable</td>\n",
       "      <td>0.745162</td>\n",
       "      <td>0.743886</td>\n",
       "      <td>7947.405055</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                      Model_Name  R-Squared  Adj. R-Squared  \\\n",
       "0  Linreg full model with log of target variable   0.745162        0.743886   \n",
       "\n",
       "         RMSE  \n",
       "0 7947.405055  "
      ]
     },
     "execution_count": 61,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# compile the required information\n",
    "linreg_full_model_withlog_metrics = pd.Series({\n",
    "                     'Model_Name': \"Linreg full model with log of target variable\",\n",
    "                     'RMSE':linreg_full_model_withlog_rmse,\n",
    "                     'R-Squared': linreg_full_model_withlog_rsquared,\n",
    "                     'Adj. R-Squared': linreg_full_model_withlog_rsquared_adj \n",
    "                  # 'Test_R-Squared': linreg_full_model_withlog_test_rsquared    # for Test-RSquared\n",
    "                   })\n",
    "\n",
    "# append our result table using append()\n",
    "# ignore_index=True: does not use the index labels\n",
    "score_card = score_card.append(linreg_full_model_withlog_metrics, ignore_index=True)\n",
    "score_card"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "Bn2GSpdi5Gyo"
   },
   "source": [
    "<a id='withoutLog'></a>\n",
    "### 5.2 Multiple Linear Regression - Full Model - without Log Transformed Dependent Variable (OLS)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "hPvHO7rM5Gyp"
   },
   "source": [
    "**1. Build model using sm.OLS().fit()**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "metadata": {
    "id": "k8PgwuRi5Gyp",
    "outputId": "cca075e8-81b0-4254-fb99-ba43bf01ec99",
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                            OLS Regression Results                            \n",
      "==============================================================================\n",
      "Dep. Variable:                  claim   R-squared:                       0.765\n",
      "Model:                            OLS   Adj. R-squared:                  0.764\n",
      "Method:                 Least Squares   F-statistic:                     651.8\n",
      "Date:                Sun, 16 Oct 2022   Prob (F-statistic):               0.00\n",
      "Time:                        08:56:03   Log-Likelihood:            -1.1150e+05\n",
      "No. Observations:               11042   AIC:                         2.231e+05\n",
      "Df Residuals:                   10986   BIC:                         2.235e+05\n",
      "Df Model:                          55                                         \n",
      "Covariance Type:            nonrobust                                         \n",
      "====================================================================================================\n",
      "                                       coef    std err          t      P>|t|      [0.025      0.975]\n",
      "----------------------------------------------------------------------------------------------------\n",
      "const                             1930.3475    897.945      2.150      0.032     170.213    3690.482\n",
      "age                                263.8397      4.570     57.727      0.000     254.881     272.799\n",
      "weight                             -39.9565      4.585     -8.714      0.000     -48.945     -30.968\n",
      "bmi                                225.0768     10.673     21.088      0.000     204.155     245.998\n",
      "no_of_dependents                   489.8947     47.136     10.393      0.000     397.500     582.289\n",
      "bloodpressure                       26.2334      5.366      4.888      0.000      15.714      36.752\n",
      "sex_male                             1.2630    116.874      0.011      0.991    -227.831     230.357\n",
      "hereditary_diseases_Arthritis    -2337.6038    868.439     -2.692      0.007   -4039.901    -635.306\n",
      "hereditary_diseases_Cancer         674.6462    868.596      0.777      0.437   -1027.958    2377.250\n",
      "hereditary_diseases_Diabetes     -2185.4704    819.839     -2.666      0.008   -3792.502    -578.438\n",
      "hereditary_diseases_Epilepsy        55.4566    964.818      0.057      0.954   -1835.760    1946.674\n",
      "hereditary_diseases_EyeDisease   -2235.5795    867.978     -2.576      0.010   -3936.972    -534.187\n",
      "hereditary_diseases_HeartDisease  4548.5316    934.059      4.870      0.000    2717.609    6379.455\n",
      "hereditary_diseases_High BP      -2468.8700   1017.382     -2.427      0.015   -4463.121    -474.619\n",
      "hereditary_diseases_NoDisease    -1.156e+04    578.499    -19.990      0.000   -1.27e+04   -1.04e+04\n",
      "hereditary_diseases_Obesity       -660.8869    798.643     -0.828      0.408   -2226.370     904.596\n",
      "smoker_1                          1.995e+04    164.283    121.432      0.000    1.96e+04    2.03e+04\n",
      "diabetes_1                        1265.4863    138.283      9.151      0.000     994.427    1536.545\n",
      "regular_ex_1                      -928.0044    138.011     -6.724      0.000   -1198.530    -657.479\n",
      "job_title_Accountant               733.3261    533.907      1.374      0.170    -313.228    1779.880\n",
      "job_title_Actor                   -165.9424    468.826     -0.354      0.723   -1084.926     753.041\n",
      "job_title_Analyst                -1493.4068    576.690     -2.590      0.010   -2623.824    -362.990\n",
      "job_title_Architect                896.9194    542.507      1.653      0.098    -166.492    1960.330\n",
      "job_title_Beautician               632.9902    535.926      1.181      0.238    -417.522    1683.502\n",
      "job_title_Blogger                 -804.9180    572.615     -1.406      0.160   -1927.346     317.510\n",
      "job_title_Buisnessman              -65.6399    600.480     -0.109      0.913   -1242.690    1111.410\n",
      "job_title_CA                       395.7081    579.102      0.683      0.494    -739.435    1530.851\n",
      "job_title_CEO                      685.4554    525.817      1.304      0.192    -345.240    1716.151\n",
      "job_title_Chef                    -641.9237    580.039     -1.107      0.268   -1778.905     495.058\n",
      "job_title_Clerks                   878.0766    533.096      1.647      0.100    -166.887    1923.040\n",
      "job_title_Dancer                   102.1487    475.375      0.215      0.830    -829.671    1033.969\n",
      "job_title_DataScientist           1265.2147    544.069      2.325      0.020     198.742    2331.687\n",
      "job_title_DefencePersonnels       -899.0770    561.044     -1.603      0.109   -1998.825     200.671\n",
      "job_title_Doctor                  1357.3678    560.474      2.422      0.015     258.737    2455.999\n",
      "job_title_Engineer                1898.9381    531.098      3.575      0.000     857.891    2939.985\n",
      "job_title_Farmer                   -55.1331    590.861     -0.093      0.926   -1213.326    1103.060\n",
      "job_title_FashionDesigner          376.6111    527.193      0.714      0.475    -656.783    1410.005\n",
      "job_title_FilmDirector             127.1507    573.286      0.222      0.824    -996.592    1250.894\n",
      "job_title_FilmMaker                135.3960    472.907      0.286      0.775    -791.587    1062.379\n",
      "job_title_GovEmployee             -932.9065    598.703     -1.558      0.119   -2106.472     240.659\n",
      "job_title_HomeMakers               878.2097    450.081      1.951      0.051      -4.029    1760.449\n",
      "job_title_HouseKeeper             -277.3492    475.431     -0.583      0.560   -1209.280     654.581\n",
      "job_title_ITProfessional            84.8482    534.897      0.159      0.874    -963.646    1133.343\n",
      "job_title_Journalist               160.4958    575.337      0.279      0.780    -967.268    1288.260\n",
      "job_title_Labourer                1054.0406    624.251      1.688      0.091    -169.603    2277.684\n",
      "job_title_Lawyer                  1067.2618    559.269      1.908      0.056     -29.006    2163.530\n",
      "job_title_Manager                 1570.5619    483.262      3.250      0.001     623.281    2517.843\n",
      "job_title_Photographer            2617.0360    526.243      4.973      0.000    1585.505    3648.567\n",
      "job_title_Police                   379.8711    519.331      0.731      0.465    -638.112    1397.854\n",
      "job_title_Politician              2111.7737    534.517      3.951      0.000    1064.025    3159.522\n",
      "job_title_Singer                   954.3528    469.490      2.033      0.042      34.069    1874.637\n",
      "job_title_Student                 1083.4551    441.941      2.452      0.014     217.171    1949.739\n",
      "job_title_Technician              -284.0798    568.826     -0.499      0.617   -1399.080     830.921\n",
      "region_North-East                  -96.5992    174.307     -0.554      0.579    -438.273     245.074\n",
      "region_Southern                     81.1170    166.066      0.488      0.625    -244.402     406.636\n",
      "region_West                       -130.4033    167.237     -0.780      0.436    -458.217     197.411\n",
      "==============================================================================\n",
      "Omnibus:                     3106.704   Durbin-Watson:                   1.980\n",
      "Prob(Omnibus):                  0.000   Jarque-Bera (JB):            10201.522\n",
      "Skew:                           1.421   Prob(JB):                         0.00\n",
      "Kurtosis:                       6.754   Cond. No.                     4.61e+03\n",
      "==============================================================================\n",
      "\n",
      "Notes:\n",
      "[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n",
      "[2] The condition number is large, 4.61e+03. This might indicate that there are\n",
      "strong multicollinearity or other numerical problems.\n"
     ]
    }
   ],
   "source": [
    "# build a full model using OLS()\n",
    "linreg_full_model_withoutlog = sm.OLS(y_train['claim'], X_train).fit()\n",
    "\n",
    "# print the summary output\n",
    "print(linreg_full_model_withoutlog.summary())"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "1dc4FLQe5Gyr"
   },
   "source": [
    "#### Calculate the p-values to know the insignificant variables"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "metadata": {
    "id": "v92LNJOw5Gyr",
    "outputId": "22edaabe-9db3-4c5c-ff2c-95236745a55b",
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>P-Value</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>const</th>\n",
       "      <td>0.031598</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>age</th>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>weight</th>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>bmi</th>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>no_of_dependents</th>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>bloodpressure</th>\n",
       "      <td>0.000001</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>sex_male</th>\n",
       "      <td>0.991378</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>hereditary_diseases_Arthritis</th>\n",
       "      <td>0.007119</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>hereditary_diseases_Cancer</th>\n",
       "      <td>0.437347</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>hereditary_diseases_Diabetes</th>\n",
       "      <td>0.007693</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>hereditary_diseases_Epilepsy</th>\n",
       "      <td>0.954165</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>hereditary_diseases_EyeDisease</th>\n",
       "      <td>0.010019</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>hereditary_diseases_HeartDisease</th>\n",
       "      <td>0.000001</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>hereditary_diseases_High BP</th>\n",
       "      <td>0.015253</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>hereditary_diseases_NoDisease</th>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>hereditary_diseases_Obesity</th>\n",
       "      <td>0.407964</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>smoker_1</th>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>diabetes_1</th>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>regular_ex_1</th>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>job_title_Accountant</th>\n",
       "      <td>0.169622</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>job_title_Actor</th>\n",
       "      <td>0.723381</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>job_title_Analyst</th>\n",
       "      <td>0.009621</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>job_title_Architect</th>\n",
       "      <td>0.098301</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>job_title_Beautician</th>\n",
       "      <td>0.237583</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>job_title_Blogger</th>\n",
       "      <td>0.159845</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>job_title_Buisnessman</th>\n",
       "      <td>0.912957</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>job_title_CA</th>\n",
       "      <td>0.494423</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>job_title_CEO</th>\n",
       "      <td>0.192397</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>job_title_Chef</th>\n",
       "      <td>0.268452</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>job_title_Clerks</th>\n",
       "      <td>0.099560</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>job_title_Dancer</th>\n",
       "      <td>0.829865</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>job_title_DataScientist</th>\n",
       "      <td>0.020065</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>job_title_DefencePersonnels</th>\n",
       "      <td>0.109073</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>job_title_Doctor</th>\n",
       "      <td>0.015459</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>job_title_Engineer</th>\n",
       "      <td>0.000351</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>job_title_Farmer</th>\n",
       "      <td>0.925659</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>job_title_FashionDesigner</th>\n",
       "      <td>0.475014</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>job_title_FilmDirector</th>\n",
       "      <td>0.824479</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>job_title_FilmMaker</th>\n",
       "      <td>0.774649</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>job_title_GovEmployee</th>\n",
       "      <td>0.119212</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>job_title_HomeMakers</th>\n",
       "      <td>0.051055</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>job_title_HouseKeeper</th>\n",
       "      <td>0.559661</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>job_title_ITProfessional</th>\n",
       "      <td>0.873967</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>job_title_Journalist</th>\n",
       "      <td>0.780281</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>job_title_Labourer</th>\n",
       "      <td>0.091346</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>job_title_Lawyer</th>\n",
       "      <td>0.056377</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>job_title_Manager</th>\n",
       "      <td>0.001158</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>job_title_Photographer</th>\n",
       "      <td>0.000001</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>job_title_Police</th>\n",
       "      <td>0.464513</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>job_title_Politician</th>\n",
       "      <td>0.000078</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>job_title_Singer</th>\n",
       "      <td>0.042102</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>job_title_Student</th>\n",
       "      <td>0.014238</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>job_title_Technician</th>\n",
       "      <td>0.617497</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>region_North-East</th>\n",
       "      <td>0.579460</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>region_Southern</th>\n",
       "      <td>0.625231</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>region_West</th>\n",
       "      <td>0.435553</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                  P-Value\n",
       "const                            0.031598\n",
       "age                              0.000000\n",
       "weight                           0.000000\n",
       "bmi                              0.000000\n",
       "no_of_dependents                 0.000000\n",
       "bloodpressure                    0.000001\n",
       "sex_male                         0.991378\n",
       "hereditary_diseases_Arthritis    0.007119\n",
       "hereditary_diseases_Cancer       0.437347\n",
       "hereditary_diseases_Diabetes     0.007693\n",
       "hereditary_diseases_Epilepsy     0.954165\n",
       "hereditary_diseases_EyeDisease   0.010019\n",
       "hereditary_diseases_HeartDisease 0.000001\n",
       "hereditary_diseases_High BP      0.015253\n",
       "hereditary_diseases_NoDisease    0.000000\n",
       "hereditary_diseases_Obesity      0.407964\n",
       "smoker_1                         0.000000\n",
       "diabetes_1                       0.000000\n",
       "regular_ex_1                     0.000000\n",
       "job_title_Accountant             0.169622\n",
       "job_title_Actor                  0.723381\n",
       "job_title_Analyst                0.009621\n",
       "job_title_Architect              0.098301\n",
       "job_title_Beautician             0.237583\n",
       "job_title_Blogger                0.159845\n",
       "job_title_Buisnessman            0.912957\n",
       "job_title_CA                     0.494423\n",
       "job_title_CEO                    0.192397\n",
       "job_title_Chef                   0.268452\n",
       "job_title_Clerks                 0.099560\n",
       "job_title_Dancer                 0.829865\n",
       "job_title_DataScientist          0.020065\n",
       "job_title_DefencePersonnels      0.109073\n",
       "job_title_Doctor                 0.015459\n",
       "job_title_Engineer               0.000351\n",
       "job_title_Farmer                 0.925659\n",
       "job_title_FashionDesigner        0.475014\n",
       "job_title_FilmDirector           0.824479\n",
       "job_title_FilmMaker              0.774649\n",
       "job_title_GovEmployee            0.119212\n",
       "job_title_HomeMakers             0.051055\n",
       "job_title_HouseKeeper            0.559661\n",
       "job_title_ITProfessional         0.873967\n",
       "job_title_Journalist             0.780281\n",
       "job_title_Labourer               0.091346\n",
       "job_title_Lawyer                 0.056377\n",
       "job_title_Manager                0.001158\n",
       "job_title_Photographer           0.000001\n",
       "job_title_Police                 0.464513\n",
       "job_title_Politician             0.000078\n",
       "job_title_Singer                 0.042102\n",
       "job_title_Student                0.014238\n",
       "job_title_Technician             0.617497\n",
       "region_North-East                0.579460\n",
       "region_Southern                  0.625231\n",
       "region_West                      0.435553"
      ]
     },
     "execution_count": 63,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# calculate the p-values for all the variables\n",
    "# create a dataframe using pd.DataFrame()\n",
    "# columns: specifies the column names\n",
    "linreg_full_model_withoutlog_pvalues = pd.DataFrame(linreg_full_model_withoutlog.pvalues, columns=[\"P-Value\"])\n",
    "\n",
    "linreg_full_model_withoutlog_pvalues"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "5zAPJ6K35Gys"
   },
   "source": [
    "The above table shows the p-values for all the variables to decide the significant variables"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "1rRUIFoI5Gys"
   },
   "source": [
    "Let's create a list of insignificant variables"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 64,
   "metadata": {
    "id": "P6Cj-XSE5Gyt",
    "outputId": "9e30bec0-d165-4bae-a901-22c73d1c9dc3",
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['sex_male',\n",
       " 'hereditary_diseases_Cancer',\n",
       " 'hereditary_diseases_Epilepsy',\n",
       " 'hereditary_diseases_Obesity',\n",
       " 'job_title_Accountant',\n",
       " 'job_title_Actor',\n",
       " 'job_title_Architect',\n",
       " 'job_title_Beautician',\n",
       " 'job_title_Blogger',\n",
       " 'job_title_Buisnessman',\n",
       " 'job_title_CA',\n",
       " 'job_title_CEO',\n",
       " 'job_title_Chef',\n",
       " 'job_title_Clerks',\n",
       " 'job_title_Dancer',\n",
       " 'job_title_DefencePersonnels',\n",
       " 'job_title_Farmer',\n",
       " 'job_title_FashionDesigner',\n",
       " 'job_title_FilmDirector',\n",
       " 'job_title_FilmMaker',\n",
       " 'job_title_GovEmployee',\n",
       " 'job_title_HomeMakers',\n",
       " 'job_title_HouseKeeper',\n",
       " 'job_title_ITProfessional',\n",
       " 'job_title_Journalist',\n",
       " 'job_title_Labourer',\n",
       " 'job_title_Lawyer',\n",
       " 'job_title_Police',\n",
       " 'job_title_Technician',\n",
       " 'region_North-East',\n",
       " 'region_Southern',\n",
       " 'region_West']"
      ]
     },
     "execution_count": 64,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# select insignificant variables\n",
    "insignificant_variables = linreg_full_model_withoutlog_pvalues[\n",
    "                                                        linreg_full_model_withoutlog_pvalues['P-Value']  > 0.05]\n",
    "\n",
    "# get the position of a specified value\n",
    "insigni_var = insignificant_variables.index\n",
    "\n",
    "# convert the list of variables to 'list' type\n",
    "insigni_var = insigni_var.to_list()\n",
    "\n",
    "# get the list of insignificant variables\n",
    "insigni_var"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "sMrtwW3n5Gyt"
   },
   "source": [
    "**2. Predict the values using test set**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 65,
   "metadata": {
    "id": "uhbf4uZ85Gyu"
   },
   "outputs": [],
   "source": [
    "# predict the claim using predict()\n",
    "predicted_claim = linreg_full_model_withoutlog.predict(X_test)\n",
    "\n",
    "# extract the 'claim' values from the test data\n",
    "actual_claim = y_test['claim']"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "5EqGxeDF5Gyu"
   },
   "source": [
    "**3. Compute model accuracy measures**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 66,
   "metadata": {
    "id": "za2oV1m25Gyu"
   },
   "outputs": [],
   "source": [
    "# calculate rmse using rmse()\n",
    "linreg_full_model_withoutlog_rmse = rmse(actual_claim, predicted_claim)\n",
    "\n",
    "# calculate R-squared using rsquared\n",
    "linreg_full_model_withoutlog_rsquared = linreg_full_model_withoutlog.rsquared\n",
    "# linreg_full_model_withoutlog_test_rsquared = r2_score(actual_claim, predicted_claim)\n",
    "\n",
    "# calculate Adjusted R-Squared using rsquared_adj\n",
    "linreg_full_model_withoutlog_rsquared_adj = linreg_full_model_withoutlog.rsquared_adj "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "9OxKivbj5Gyu"
   },
   "source": [
    "**4. Tabulate the results**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 67,
   "metadata": {
    "id": "9QtusieL5Gyv",
    "outputId": "d9dd3d4e-063a-45b2-e8f2-4970dc18d250"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Model_Name</th>\n",
       "      <th>R-Squared</th>\n",
       "      <th>Adj. R-Squared</th>\n",
       "      <th>RMSE</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Linreg full model with log of target variable</td>\n",
       "      <td>0.745162</td>\n",
       "      <td>0.743886</td>\n",
       "      <td>7947.405055</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Linreg full model without log of target variable</td>\n",
       "      <td>0.765424</td>\n",
       "      <td>0.764249</td>\n",
       "      <td>5916.234909</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                         Model_Name  R-Squared  \\\n",
       "0     Linreg full model with log of target variable   0.745162   \n",
       "1  Linreg full model without log of target variable   0.765424   \n",
       "\n",
       "   Adj. R-Squared        RMSE  \n",
       "0        0.743886 7947.405055  \n",
       "1        0.764249 5916.234909  "
      ]
     },
     "execution_count": 67,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# compile the required information\n",
    "linreg_full_model_withoutlog_metrics = pd.Series({\n",
    "                     'Model_Name': \"Linreg full model without log of target variable\",\n",
    "                     'RMSE':linreg_full_model_withoutlog_rmse,\n",
    "                     'R-Squared': linreg_full_model_withoutlog_rsquared,\n",
    "                     'Adj. R-Squared': linreg_full_model_withoutlog_rsquared_adj\n",
    "                   })\n",
    "\n",
    "# append our result table using append()\n",
    "score_card = score_card.append(linreg_full_model_withoutlog_metrics, ignore_index=True)\n",
    "score_card"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "RE0gp-Be5Gyv"
   },
   "source": [
    "<a id='Finetuning'></a>\n",
    "## 5.3. Fine Tune Linear Regression Model (OLS)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "CKS3D16z5Gyw"
   },
   "source": [
    "<a id='RemovingInsignificantVariable'></a>\n",
    "### 5.3.1 Linear Regression after Removing Insignificant Variable (OLS)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "x3vJNG5I5Gyw"
   },
   "source": [
    "**1. Consider the significant variables**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 68,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>const</th>\n",
       "      <th>age</th>\n",
       "      <th>weight</th>\n",
       "      <th>bmi</th>\n",
       "      <th>no_of_dependents</th>\n",
       "      <th>bloodpressure</th>\n",
       "      <th>sex_male</th>\n",
       "      <th>hereditary_diseases_Arthritis</th>\n",
       "      <th>hereditary_diseases_Cancer</th>\n",
       "      <th>hereditary_diseases_Diabetes</th>\n",
       "      <th>hereditary_diseases_Epilepsy</th>\n",
       "      <th>hereditary_diseases_EyeDisease</th>\n",
       "      <th>hereditary_diseases_HeartDisease</th>\n",
       "      <th>hereditary_diseases_High BP</th>\n",
       "      <th>hereditary_diseases_NoDisease</th>\n",
       "      <th>hereditary_diseases_Obesity</th>\n",
       "      <th>smoker_1</th>\n",
       "      <th>diabetes_1</th>\n",
       "      <th>regular_ex_1</th>\n",
       "      <th>job_title_Accountant</th>\n",
       "      <th>job_title_Actor</th>\n",
       "      <th>job_title_Analyst</th>\n",
       "      <th>job_title_Architect</th>\n",
       "      <th>job_title_Beautician</th>\n",
       "      <th>job_title_Blogger</th>\n",
       "      <th>job_title_Buisnessman</th>\n",
       "      <th>job_title_CA</th>\n",
       "      <th>job_title_CEO</th>\n",
       "      <th>job_title_Chef</th>\n",
       "      <th>job_title_Clerks</th>\n",
       "      <th>job_title_Dancer</th>\n",
       "      <th>job_title_DataScientist</th>\n",
       "      <th>job_title_DefencePersonnels</th>\n",
       "      <th>job_title_Doctor</th>\n",
       "      <th>job_title_Engineer</th>\n",
       "      <th>job_title_Farmer</th>\n",
       "      <th>job_title_FashionDesigner</th>\n",
       "      <th>job_title_FilmDirector</th>\n",
       "      <th>job_title_FilmMaker</th>\n",
       "      <th>job_title_GovEmployee</th>\n",
       "      <th>job_title_HomeMakers</th>\n",
       "      <th>job_title_HouseKeeper</th>\n",
       "      <th>job_title_ITProfessional</th>\n",
       "      <th>job_title_Journalist</th>\n",
       "      <th>job_title_Labourer</th>\n",
       "      <th>job_title_Lawyer</th>\n",
       "      <th>job_title_Manager</th>\n",
       "      <th>job_title_Photographer</th>\n",
       "      <th>job_title_Police</th>\n",
       "      <th>job_title_Politician</th>\n",
       "      <th>job_title_Singer</th>\n",
       "      <th>job_title_Student</th>\n",
       "      <th>job_title_Technician</th>\n",
       "      <th>region_North-East</th>\n",
       "      <th>region_Southern</th>\n",
       "      <th>region_West</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1163</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>30.000000</td>\n",
       "      <td>79</td>\n",
       "      <td>43.100000</td>\n",
       "      <td>2</td>\n",
       "      <td>58</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5615</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>58.000000</td>\n",
       "      <td>55</td>\n",
       "      <td>24.300000</td>\n",
       "      <td>0</td>\n",
       "      <td>74</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10109</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>63.000000</td>\n",
       "      <td>80</td>\n",
       "      <td>36.900000</td>\n",
       "      <td>0</td>\n",
       "      <td>80</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3256</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>18.000000</td>\n",
       "      <td>52</td>\n",
       "      <td>31.400000</td>\n",
       "      <td>0</td>\n",
       "      <td>58</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7087</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>40.000000</td>\n",
       "      <td>80</td>\n",
       "      <td>30.266413</td>\n",
       "      <td>4</td>\n",
       "      <td>85</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         const       age  weight       bmi  no_of_dependents  bloodpressure  \\\n",
       "1163  1.000000 30.000000      79 43.100000                 2             58   \n",
       "5615  1.000000 58.000000      55 24.300000                 0             74   \n",
       "10109 1.000000 63.000000      80 36.900000                 0             80   \n",
       "3256  1.000000 18.000000      52 31.400000                 0             58   \n",
       "7087  1.000000 40.000000      80 30.266413                 4             85   \n",
       "\n",
       "       sex_male  hereditary_diseases_Arthritis  hereditary_diseases_Cancer  \\\n",
       "1163          0                              0                           0   \n",
       "5615          0                              0                           0   \n",
       "10109         0                              0                           0   \n",
       "3256          0                              0                           0   \n",
       "7087          1                              0                           0   \n",
       "\n",
       "       hereditary_diseases_Diabetes  hereditary_diseases_Epilepsy  \\\n",
       "1163                              0                             0   \n",
       "5615                              0                             0   \n",
       "10109                             0                             0   \n",
       "3256                              0                             0   \n",
       "7087                              0                             0   \n",
       "\n",
       "       hereditary_diseases_EyeDisease  hereditary_diseases_HeartDisease  \\\n",
       "1163                                0                                 0   \n",
       "5615                                0                                 0   \n",
       "10109                               0                                 0   \n",
       "3256                                0                                 0   \n",
       "7087                                0                                 0   \n",
       "\n",
       "       hereditary_diseases_High BP  hereditary_diseases_NoDisease  \\\n",
       "1163                             0                              1   \n",
       "5615                             0                              1   \n",
       "10109                            0                              1   \n",
       "3256                             0                              1   \n",
       "7087                             0                              1   \n",
       "\n",
       "       hereditary_diseases_Obesity  smoker_1  diabetes_1  regular_ex_1  \\\n",
       "1163                             0         0           1             0   \n",
       "5615                             0         0           1             1   \n",
       "10109                            0         0           1             0   \n",
       "3256                             0         0           1             0   \n",
       "7087                             0         0           1             0   \n",
       "\n",
       "       job_title_Accountant  job_title_Actor  job_title_Analyst  \\\n",
       "1163                      0                0                  0   \n",
       "5615                      0                0                  0   \n",
       "10109                     0                0                  0   \n",
       "3256                      0                0                  0   \n",
       "7087                      0                0                  0   \n",
       "\n",
       "       job_title_Architect  job_title_Beautician  job_title_Blogger  \\\n",
       "1163                     0                     0                  0   \n",
       "5615                     0                     0                  0   \n",
       "10109                    0                     0                  0   \n",
       "3256                     0                     0                  1   \n",
       "7087                     0                     0                  0   \n",
       "\n",
       "       job_title_Buisnessman  job_title_CA  job_title_CEO  job_title_Chef  \\\n",
       "1163                       1             0              0               0   \n",
       "5615                       0             0              0               0   \n",
       "10109                      0             0              0               0   \n",
       "3256                       0             0              0               0   \n",
       "7087                       0             0              0               0   \n",
       "\n",
       "       job_title_Clerks  job_title_Dancer  job_title_DataScientist  \\\n",
       "1163                  0                 0                        0   \n",
       "5615                  0                 0                        0   \n",
       "10109                 0                 0                        0   \n",
       "3256                  0                 0                        0   \n",
       "7087                  0                 0                        0   \n",
       "\n",
       "       job_title_DefencePersonnels  job_title_Doctor  job_title_Engineer  \\\n",
       "1163                             0                 0                   0   \n",
       "5615                             0                 0                   0   \n",
       "10109                            0                 0                   0   \n",
       "3256                             0                 0                   0   \n",
       "7087                             1                 0                   0   \n",
       "\n",
       "       job_title_Farmer  job_title_FashionDesigner  job_title_FilmDirector  \\\n",
       "1163                  0                          0                       0   \n",
       "5615                  0                          0                       1   \n",
       "10109                 0                          0                       0   \n",
       "3256                  0                          0                       0   \n",
       "7087                  0                          0                       0   \n",
       "\n",
       "       job_title_FilmMaker  job_title_GovEmployee  job_title_HomeMakers  \\\n",
       "1163                     0                      0                     0   \n",
       "5615                     0                      0                     0   \n",
       "10109                    0                      0                     0   \n",
       "3256                     0                      0                     0   \n",
       "7087                     0                      0                     0   \n",
       "\n",
       "       job_title_HouseKeeper  job_title_ITProfessional  job_title_Journalist  \\\n",
       "1163                       0                         0                     0   \n",
       "5615                       0                         0                     0   \n",
       "10109                      0                         0                     0   \n",
       "3256                       0                         0                     0   \n",
       "7087                       0                         0                     0   \n",
       "\n",
       "       job_title_Labourer  job_title_Lawyer  job_title_Manager  \\\n",
       "1163                    0                 0                  0   \n",
       "5615                    0                 0                  0   \n",
       "10109                   1                 0                  0   \n",
       "3256                    0                 0                  0   \n",
       "7087                    0                 0                  0   \n",
       "\n",
       "       job_title_Photographer  job_title_Police  job_title_Politician  \\\n",
       "1163                        0                 0                     0   \n",
       "5615                        0                 0                     0   \n",
       "10109                       0                 0                     0   \n",
       "3256                        0                 0                     0   \n",
       "7087                        0                 0                     0   \n",
       "\n",
       "       job_title_Singer  job_title_Student  job_title_Technician  \\\n",
       "1163                  0                  0                     0   \n",
       "5615                  0                  0                     0   \n",
       "10109                 0                  0                     0   \n",
       "3256                  0                  0                     0   \n",
       "7087                  0                  0                     0   \n",
       "\n",
       "       region_North-East  region_Southern  region_West  \n",
       "1163                   1                0            0  \n",
       "5615                   1                0            0  \n",
       "10109                  0                0            0  \n",
       "3256                   0                0            1  \n",
       "7087                   0                0            1  "
      ]
     },
     "execution_count": 68,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X_train.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 69,
   "metadata": {
    "id": "bskshkt-5Gyx"
   },
   "outputs": [],
   "source": [
    "# drop the insignificant variables\n",
    "X_significant = df_insurance.drop([\"sex\",\"job_title\",\"region\",\"claim\",\"log_claim\"], axis=1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 70,
   "metadata": {
    "id": "svH8_5C85Gyx",
    "outputId": "76ef9413-6a6f-47ab-c590-48c3cc3b54ee"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['hereditary_diseases', 'smoker', 'diabetes', 'regular_ex'], dtype='object')"
      ]
     },
     "execution_count": 70,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# filter the categorical features in the dataset using select_dtypes()\n",
    "df_significant_categoric_features = X_significant.select_dtypes(include=[np.object])\n",
    "df_significant_categoric_features.columns"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "RKGw8tV15Gyx"
   },
   "source": [
    "**Dummy encode the catergorical variables**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 71,
   "metadata": {
    "id": "4U0M73DT5Gyx"
   },
   "outputs": [],
   "source": [
    "# create data frame with only categorical variables that have been encoded\n",
    "\n",
    "# for all categoric variables create dummy variables\n",
    "for col in df_significant_categoric_features.columns.values:\n",
    "    \n",
    "    dummy_encoded_variables = pd.get_dummies(df_significant_categoric_features[col], prefix=col, drop_first=True)\n",
    "    df_significant_categoric_features = pd.concat([df_significant_categoric_features, dummy_encoded_variables],axis=1)\n",
    "    df_significant_categoric_features.drop([col], axis=1, inplace=True)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "_6Knqb595Gyy"
   },
   "source": [
    "**Concatenate numerical and dummy encoded categorical variables**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 72,
   "metadata": {
    "id": "jhqySDrv5Gyy",
    "outputId": "eef82c99-2a8b-45f0-b813-e60ee89ae6d7"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>age</th>\n",
       "      <th>weight</th>\n",
       "      <th>bmi</th>\n",
       "      <th>no_of_dependents</th>\n",
       "      <th>bloodpressure</th>\n",
       "      <th>claim</th>\n",
       "      <th>log_claim</th>\n",
       "      <th>hereditary_diseases_Arthritis</th>\n",
       "      <th>hereditary_diseases_Cancer</th>\n",
       "      <th>hereditary_diseases_Diabetes</th>\n",
       "      <th>hereditary_diseases_Epilepsy</th>\n",
       "      <th>hereditary_diseases_EyeDisease</th>\n",
       "      <th>hereditary_diseases_HeartDisease</th>\n",
       "      <th>hereditary_diseases_High BP</th>\n",
       "      <th>hereditary_diseases_NoDisease</th>\n",
       "      <th>hereditary_diseases_Obesity</th>\n",
       "      <th>smoker_1</th>\n",
       "      <th>diabetes_1</th>\n",
       "      <th>regular_ex_1</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>60.000000</td>\n",
       "      <td>64</td>\n",
       "      <td>24.300000</td>\n",
       "      <td>1</td>\n",
       "      <td>72</td>\n",
       "      <td>13112.600000</td>\n",
       "      <td>9.481329</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>49.000000</td>\n",
       "      <td>75</td>\n",
       "      <td>22.600000</td>\n",
       "      <td>1</td>\n",
       "      <td>78</td>\n",
       "      <td>9567.000000</td>\n",
       "      <td>9.166075</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>32.000000</td>\n",
       "      <td>64</td>\n",
       "      <td>17.800000</td>\n",
       "      <td>2</td>\n",
       "      <td>88</td>\n",
       "      <td>32734.200000</td>\n",
       "      <td>10.396176</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>61.000000</td>\n",
       "      <td>53</td>\n",
       "      <td>36.400000</td>\n",
       "      <td>1</td>\n",
       "      <td>72</td>\n",
       "      <td>48517.600000</td>\n",
       "      <td>10.789682</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>19.000000</td>\n",
       "      <td>50</td>\n",
       "      <td>20.600000</td>\n",
       "      <td>0</td>\n",
       "      <td>82</td>\n",
       "      <td>1731.700000</td>\n",
       "      <td>7.456859</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "        age  weight       bmi  no_of_dependents  bloodpressure        claim  \\\n",
       "0 60.000000      64 24.300000                 1             72 13112.600000   \n",
       "1 49.000000      75 22.600000                 1             78  9567.000000   \n",
       "2 32.000000      64 17.800000                 2             88 32734.200000   \n",
       "3 61.000000      53 36.400000                 1             72 48517.600000   \n",
       "4 19.000000      50 20.600000                 0             82  1731.700000   \n",
       "\n",
       "   log_claim  hereditary_diseases_Arthritis  hereditary_diseases_Cancer  \\\n",
       "0   9.481329                              0                           0   \n",
       "1   9.166075                              0                           0   \n",
       "2  10.396176                              0                           0   \n",
       "3  10.789682                              0                           0   \n",
       "4   7.456859                              0                           0   \n",
       "\n",
       "   hereditary_diseases_Diabetes  hereditary_diseases_Epilepsy  \\\n",
       "0                             0                             0   \n",
       "1                             0                             0   \n",
       "2                             0                             1   \n",
       "3                             0                             0   \n",
       "4                             0                             0   \n",
       "\n",
       "   hereditary_diseases_EyeDisease  hereditary_diseases_HeartDisease  \\\n",
       "0                               0                                 0   \n",
       "1                               0                                 0   \n",
       "2                               0                                 0   \n",
       "3                               0                                 0   \n",
       "4                               0                                 0   \n",
       "\n",
       "   hereditary_diseases_High BP  hereditary_diseases_NoDisease  \\\n",
       "0                            0                              1   \n",
       "1                            0                              1   \n",
       "2                            0                              0   \n",
       "3                            0                              1   \n",
       "4                            0                              1   \n",
       "\n",
       "   hereditary_diseases_Obesity  smoker_1  diabetes_1  regular_ex_1  \n",
       "0                            0         0           0             0  \n",
       "1                            0         0           1             1  \n",
       "2                            0         1           1             1  \n",
       "3                            0         1           1             0  \n",
       "4                            0         0           1             0  "
      ]
     },
     "execution_count": 72,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# concatenate the numerical and dummy encoded categorical variables using concat()\n",
    "df_insurance_significant = pd.concat([df_numeric_features, df_significant_categoric_features], axis=1)\n",
    "df_insurance_significant.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "vu2GnSCy5Gy5"
   },
   "source": [
    "**2. Split the data into training and test sets**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 73,
   "metadata": {
    "id": "rnWAZL875Gy5",
    "outputId": "da3d69a0-4526-4002-fb66-b61f020e6951"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The shape of X_train is: (11042, 18)\n",
      "The shape of X_test is: (3681, 18)\n",
      "The shape of y_train is: (11042, 2)\n",
      "The shape of y_test is: (3681, 2)\n"
     ]
    }
   ],
   "source": [
    "# add the intercept column to the dataset\n",
    "df_insurance_significant = sm.add_constant(df_insurance_significant)\n",
    "\n",
    "# separate the independent and dependent variables\n",
    "X = df_insurance_significant.drop(['claim','log_claim'], axis=1)\n",
    "y = df_insurance_significant[['log_claim','claim']]\n",
    "\n",
    "# split data into train subset and test subset for predictor and target variables\n",
    "X_train_significant, X_test_significant, y_train, y_test = train_test_split(X, y, random_state=1)\n",
    "\n",
    "print(\"The shape of X_train is:\",X_train_significant.shape)\n",
    "print(\"The shape of X_test is:\",X_test_significant.shape)\n",
    "print(\"The shape of y_train is:\",y_train.shape)\n",
    "print(\"The shape of y_test is:\",y_test.shape)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "8HvY_3Hl5Gy6"
   },
   "source": [
    "**1. Build model using sm.OLS().fit()**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 74,
   "metadata": {
    "id": "Jk9mmQ5I5Gy6",
    "outputId": "4e270cfa-e7ee-4544-e568-c895f963c785",
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                            OLS Regression Results                            \n",
      "==============================================================================\n",
      "Dep. Variable:                  claim   R-squared:                       0.761\n",
      "Model:                            OLS   Adj. R-squared:                  0.761\n",
      "Method:                 Least Squares   F-statistic:                     2064.\n",
      "Date:                Sun, 16 Oct 2022   Prob (F-statistic):               0.00\n",
      "Time:                        08:56:04   Log-Likelihood:            -1.1160e+05\n",
      "No. Observations:               11042   AIC:                         2.232e+05\n",
      "Df Residuals:                   11024   BIC:                         2.234e+05\n",
      "Df Model:                          17                                         \n",
      "Covariance Type:            nonrobust                                         \n",
      "====================================================================================================\n",
      "                                       coef    std err          t      P>|t|      [0.025      0.975]\n",
      "----------------------------------------------------------------------------------------------------\n",
      "const                             2421.3254    805.295      3.007      0.003     842.802    3999.849\n",
      "age                                260.9178      4.311     60.517      0.000     252.467     269.369\n",
      "weight                             -39.1458      4.470     -8.758      0.000     -47.907     -30.385\n",
      "bmi                                222.1813     10.594     20.972      0.000     201.415     242.948\n",
      "no_of_dependents                   464.9031     46.766      9.941      0.000     373.233     556.573\n",
      "bloodpressure                       30.1887      5.346      5.647      0.000      19.709      40.668\n",
      "hereditary_diseases_Arthritis    -2289.3687    864.738     -2.647      0.008   -3984.410    -594.328\n",
      "hereditary_diseases_Cancer         204.5989    862.460      0.237      0.812   -1485.977    1895.175\n",
      "hereditary_diseases_Diabetes     -1988.1806    822.466     -2.417      0.016   -3600.362    -375.999\n",
      "hereditary_diseases_Epilepsy       312.5081    961.763      0.325      0.745   -1572.719    2197.735\n",
      "hereditary_diseases_EyeDisease   -2071.0043    861.910     -2.403      0.016   -3760.503    -381.505\n",
      "hereditary_diseases_HeartDisease  3875.5194    922.352      4.202      0.000    2067.545    5683.494\n",
      "hereditary_diseases_High BP      -2094.0707   1011.607     -2.070      0.038   -4077.003    -111.139\n",
      "hereditary_diseases_NoDisease    -1.164e+04    577.759    -20.152      0.000   -1.28e+04   -1.05e+04\n",
      "hereditary_diseases_Obesity       -855.7985    798.410     -1.072      0.284   -2420.824     709.227\n",
      "smoker_1                          2.001e+04    161.869    123.629      0.000    1.97e+04    2.03e+04\n",
      "diabetes_1                        1248.7716    137.485      9.083      0.000     979.276    1518.268\n",
      "regular_ex_1                      -945.6538    137.510     -6.877      0.000   -1215.199    -676.109\n",
      "==============================================================================\n",
      "Omnibus:                     3205.126   Durbin-Watson:                   1.982\n",
      "Prob(Omnibus):                  0.000   Jarque-Bera (JB):            10537.776\n",
      "Skew:                           1.468   Prob(JB):                         0.00\n",
      "Kurtosis:                       6.779   Cond. No.                     3.67e+03\n",
      "==============================================================================\n",
      "\n",
      "Notes:\n",
      "[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n",
      "[2] The condition number is large, 3.67e+03. This might indicate that there are\n",
      "strong multicollinearity or other numerical problems.\n"
     ]
    }
   ],
   "source": [
    "# build a full model with significant variables using OLS()\n",
    "linreg_model_with_significant_var = sm.OLS(y_train['claim'], X_train_significant).fit()\n",
    "\n",
    "# to print the summary output\n",
    "print(linreg_model_with_significant_var.summary())"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "vYtwt6HA5Gy7"
   },
   "source": [
    "**2. Predict the values using test set**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 75,
   "metadata": {
    "id": "S-PwAeE35Gy7"
   },
   "outputs": [],
   "source": [
    "# predict the 'claim' using predict()\n",
    "predicted_claim = linreg_model_with_significant_var.predict(X_test_significant)\n",
    "\n",
    "# extract the 'claim' values from the test data\n",
    "actual_claim = y_test['claim']"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "pM4fi4Zx5Gy8"
   },
   "source": [
    "**3. Compute model accuracy measures**\n",
    "\n",
    "Now we calculate accuray measures like Root-mean-square-error (RMSE), R-squared and Adjusted R-squared."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 76,
   "metadata": {
    "id": "7aFcnbCB5Gy8"
   },
   "outputs": [],
   "source": [
    "# calculate rmse using rmse()\n",
    "linreg_model_with_significant_var_rmse = rmse(actual_claim, predicted_claim)\n",
    "\n",
    "# calculate R-squared using rsquared\n",
    "linreg_model_with_significant_var_rsquared = linreg_model_with_significant_var.rsquared\n",
    "\n",
    "# calculate Adjusted R-Squared using rsquared_adj\n",
    "linreg_model_with_significant_var_rsquared_adj = linreg_model_with_significant_var.rsquared_adj "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "_HKrZ4V25Gy9"
   },
   "source": [
    "**4. Tabulate the results**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 77,
   "metadata": {
    "id": "sGq1fTIo5Gy9",
    "outputId": "ff69ac4c-5581-4b4a-c8ef-52d50258c747"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Model_Name</th>\n",
       "      <th>R-Squared</th>\n",
       "      <th>Adj. R-Squared</th>\n",
       "      <th>RMSE</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Linreg full model with log of target variable</td>\n",
       "      <td>0.745162</td>\n",
       "      <td>0.743886</td>\n",
       "      <td>7947.405055</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Linreg full model without log of target variable</td>\n",
       "      <td>0.765424</td>\n",
       "      <td>0.764249</td>\n",
       "      <td>5916.234909</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Linreg full model with significant variables</td>\n",
       "      <td>0.760924</td>\n",
       "      <td>0.760555</td>\n",
       "      <td>5911.155096</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                         Model_Name  R-Squared  \\\n",
       "0     Linreg full model with log of target variable   0.745162   \n",
       "1  Linreg full model without log of target variable   0.765424   \n",
       "2      Linreg full model with significant variables   0.760924   \n",
       "\n",
       "   Adj. R-Squared        RMSE  \n",
       "0        0.743886 7947.405055  \n",
       "1        0.764249 5916.234909  \n",
       "2        0.760555 5911.155096  "
      ]
     },
     "execution_count": 77,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# compile the required information\n",
    "linreg_model_with_significant_var_metrics = pd.Series({\n",
    "                     'Model_Name': \"Linreg full model with significant variables\",\n",
    "                     'RMSE': linreg_model_with_significant_var_rmse,\n",
    "                     'R-Squared': linreg_model_with_significant_var_rsquared,\n",
    "                     'Adj. R-Squared': linreg_model_with_significant_var_rsquared_adj\n",
    "                   }) \n",
    "\n",
    "# append our result table using append()\n",
    "# ignore_index=True: does not use the index labels\n",
    "# python can only append a Series if ignore_index=True or if the Series has a name\n",
    "score_card = score_card.append(linreg_model_with_significant_var_metrics, ignore_index=True)\n",
    "\n",
    "# print the result table\n",
    "score_card"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "YPTj5UF25Gy_"
   },
   "source": [
    "### 5.3.2 Check the Assumptions of the Linear Regression"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "kMgHDrhB5Gy_"
   },
   "source": [
    "### 5.3.2.1 Detecting Autocorrelation\n",
    "\n",
    "** Based on Durbin Watson score, we can conclude that there is no autocorrelation**"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "y9CZUJbx5GzA"
   },
   "source": [
    "### 5.3.2.2 Detecting Heteroskedasticity\n",
    "Breusch-Pagan is the test for detecting heteroskedasticity:\n",
    "\n",
    "The null and alternate hypothesis of Breusch-Pagan test is as follows:<BR>\n",
    "    \n",
    "    H0: The residuals are homoskedastic\n",
    "    H1: The residuals are not homoskedastic"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 78,
   "metadata": {
    "id": "iSELw3Z45GzB",
    "outputId": "3877e9a5-a619-4302-a7b1-975489d9db62"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(1015.2273076491664,\n",
       " 4.976780161276515e-205,\n",
       " 65.65871887033236,\n",
       " 1.8559838513460937e-215)"
      ]
     },
     "execution_count": 78,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# create vector of result parmeters\n",
    "name = ['f-value','p-value']           \n",
    "\n",
    "# perform Breusch-Pagan test using het_breushpagan()\n",
    "breuschpagan_score = sms.het_breuschpagan(linreg_model_with_significant_var.resid, linreg_model_with_significant_var.model.exog)\n",
    "breuschpagan_score\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We observe that p-value is less than 0.05 and thus reject the null hypothesis. We conclude that there is heteroskedasticity present in the data."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "c2XA2VIy5GzC"
   },
   "source": [
    "### 5.3.2.3 Linearity of Residuals\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 79,
   "metadata": {
    "id": "f5zpZQBY5GzD",
    "outputId": "a8bd07a6-1707-4d7d-bb11-29c6fae19876",
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1800x1440 with 20 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# create subplots of scatter plots\n",
    "\n",
    "fig, ax = plt.subplots(nrows = 4, ncols= 5, figsize=(25, 20))\n",
    "\n",
    "# use for loop to create scatter plot for residuals and each independent variable (do not consider the intercept)\n",
    "# 'ax' assigns axes object to draw the plot onto \n",
    "for variable, subplot in zip(X_train_significant.columns[1:], ax.flatten()):\n",
    "    sns.scatterplot(X_train_significant[variable], linreg_model_with_significant_var.resid , ax=subplot)\n",
    "\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "From the plots we see that none of the plots show a specific pattern. Hence, we may conclude that the variables are linearly related to the dependent variable."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "jxtG7YqH5GzE"
   },
   "source": [
    "<a id='Normality_of_Residuals'></a>\n",
    "### 5.3.2.4 Normality of Residuals\n",
    "\n",
    "The assumption of normality is an important assumption for many statistical tests. The normal Q-Q plot is one way to assess normality. This q-q or quantile-quantile is a scatter plot which helps us validate the assumption of normal distribution in a data set."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 80,
   "metadata": {
    "id": "ZMx3koQq5GzF",
    "outputId": "136dc989-ca75-42a8-f52b-6fd09ace9fc4"
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1080x576 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# calculate fitted values\n",
    "fitted_vals = linreg_model_with_significant_var.predict(X_test_significant)\n",
    "\n",
    "# calculate residuals\n",
    "resids = actual_claim - fitted_vals\n",
    "\n",
    "# fig, ax = plt.subplots(1, 1, figsize=(15, 8))\n",
    "\n",
    "stats.probplot(resids, plot=plt)\n",
    "\n",
    "\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Using this plot, we can infer that the residuals do not come from a normal distribution. Also Jarqque Bera test suggests residuals do not come from a normal distribution.\n",
    "This is possible since our target variable is not normally distributed."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 81,
   "metadata": {
    "id": "cmQtvruO5GzG",
    "outputId": "3514fc1c-39c1-4169-ac17-ac6ea6348e05"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "-1.2653606553148533e-11"
      ]
     },
     "execution_count": 81,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# check the mean of the residual\n",
    "linreg_model_with_significant_var.resid.mean()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "jKjLE0Pl5GzN"
   },
   "source": [
    "### 5.3.4 Linear Regression with Interaction (OLS)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "ckeW6mLw5GzO"
   },
   "source": [
    "**1. Compute the interaction effect**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 82,
   "metadata": {
    "id": "107Enwkf5GzO",
    "outputId": "abaf554b-28c3-4aac-c646-1c4dce5d504f"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>const</th>\n",
       "      <th>age</th>\n",
       "      <th>weight</th>\n",
       "      <th>bmi</th>\n",
       "      <th>no_of_dependents</th>\n",
       "      <th>bloodpressure</th>\n",
       "      <th>claim</th>\n",
       "      <th>log_claim</th>\n",
       "      <th>sex_male</th>\n",
       "      <th>hereditary_diseases_Arthritis</th>\n",
       "      <th>hereditary_diseases_Cancer</th>\n",
       "      <th>hereditary_diseases_Diabetes</th>\n",
       "      <th>hereditary_diseases_Epilepsy</th>\n",
       "      <th>hereditary_diseases_EyeDisease</th>\n",
       "      <th>hereditary_diseases_HeartDisease</th>\n",
       "      <th>hereditary_diseases_High BP</th>\n",
       "      <th>hereditary_diseases_NoDisease</th>\n",
       "      <th>hereditary_diseases_Obesity</th>\n",
       "      <th>smoker_1</th>\n",
       "      <th>diabetes_1</th>\n",
       "      <th>regular_ex_1</th>\n",
       "      <th>job_title_Accountant</th>\n",
       "      <th>job_title_Actor</th>\n",
       "      <th>job_title_Analyst</th>\n",
       "      <th>job_title_Architect</th>\n",
       "      <th>job_title_Beautician</th>\n",
       "      <th>job_title_Blogger</th>\n",
       "      <th>job_title_Buisnessman</th>\n",
       "      <th>job_title_CA</th>\n",
       "      <th>job_title_CEO</th>\n",
       "      <th>job_title_Chef</th>\n",
       "      <th>job_title_Clerks</th>\n",
       "      <th>job_title_Dancer</th>\n",
       "      <th>job_title_DataScientist</th>\n",
       "      <th>job_title_DefencePersonnels</th>\n",
       "      <th>job_title_Doctor</th>\n",
       "      <th>job_title_Engineer</th>\n",
       "      <th>job_title_Farmer</th>\n",
       "      <th>job_title_FashionDesigner</th>\n",
       "      <th>job_title_FilmDirector</th>\n",
       "      <th>job_title_FilmMaker</th>\n",
       "      <th>job_title_GovEmployee</th>\n",
       "      <th>job_title_HomeMakers</th>\n",
       "      <th>job_title_HouseKeeper</th>\n",
       "      <th>job_title_ITProfessional</th>\n",
       "      <th>job_title_Journalist</th>\n",
       "      <th>job_title_Labourer</th>\n",
       "      <th>job_title_Lawyer</th>\n",
       "      <th>job_title_Manager</th>\n",
       "      <th>job_title_Photographer</th>\n",
       "      <th>job_title_Police</th>\n",
       "      <th>job_title_Politician</th>\n",
       "      <th>job_title_Singer</th>\n",
       "      <th>job_title_Student</th>\n",
       "      <th>job_title_Technician</th>\n",
       "      <th>region_North-East</th>\n",
       "      <th>region_Southern</th>\n",
       "      <th>region_West</th>\n",
       "      <th>bmi*smoker</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>60.000000</td>\n",
       "      <td>64</td>\n",
       "      <td>24.300000</td>\n",
       "      <td>1</td>\n",
       "      <td>72</td>\n",
       "      <td>13112.600000</td>\n",
       "      <td>9.481329</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>49.000000</td>\n",
       "      <td>75</td>\n",
       "      <td>22.600000</td>\n",
       "      <td>1</td>\n",
       "      <td>78</td>\n",
       "      <td>9567.000000</td>\n",
       "      <td>9.166075</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>32.000000</td>\n",
       "      <td>64</td>\n",
       "      <td>17.800000</td>\n",
       "      <td>2</td>\n",
       "      <td>88</td>\n",
       "      <td>32734.200000</td>\n",
       "      <td>10.396176</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>17.800000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>61.000000</td>\n",
       "      <td>53</td>\n",
       "      <td>36.400000</td>\n",
       "      <td>1</td>\n",
       "      <td>72</td>\n",
       "      <td>48517.600000</td>\n",
       "      <td>10.789682</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>36.400000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>19.000000</td>\n",
       "      <td>50</td>\n",
       "      <td>20.600000</td>\n",
       "      <td>0</td>\n",
       "      <td>82</td>\n",
       "      <td>1731.700000</td>\n",
       "      <td>7.456859</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     const       age  weight       bmi  no_of_dependents  bloodpressure  \\\n",
       "0 1.000000 60.000000      64 24.300000                 1             72   \n",
       "1 1.000000 49.000000      75 22.600000                 1             78   \n",
       "2 1.000000 32.000000      64 17.800000                 2             88   \n",
       "3 1.000000 61.000000      53 36.400000                 1             72   \n",
       "4 1.000000 19.000000      50 20.600000                 0             82   \n",
       "\n",
       "         claim  log_claim  sex_male  hereditary_diseases_Arthritis  \\\n",
       "0 13112.600000   9.481329         1                              0   \n",
       "1  9567.000000   9.166075         0                              0   \n",
       "2 32734.200000  10.396176         0                              0   \n",
       "3 48517.600000  10.789682         0                              0   \n",
       "4  1731.700000   7.456859         0                              0   \n",
       "\n",
       "   hereditary_diseases_Cancer  hereditary_diseases_Diabetes  \\\n",
       "0                           0                             0   \n",
       "1                           0                             0   \n",
       "2                           0                             0   \n",
       "3                           0                             0   \n",
       "4                           0                             0   \n",
       "\n",
       "   hereditary_diseases_Epilepsy  hereditary_diseases_EyeDisease  \\\n",
       "0                             0                               0   \n",
       "1                             0                               0   \n",
       "2                             1                               0   \n",
       "3                             0                               0   \n",
       "4                             0                               0   \n",
       "\n",
       "   hereditary_diseases_HeartDisease  hereditary_diseases_High BP  \\\n",
       "0                                 0                            0   \n",
       "1                                 0                            0   \n",
       "2                                 0                            0   \n",
       "3                                 0                            0   \n",
       "4                                 0                            0   \n",
       "\n",
       "   hereditary_diseases_NoDisease  hereditary_diseases_Obesity  smoker_1  \\\n",
       "0                              1                            0         0   \n",
       "1                              1                            0         0   \n",
       "2                              0                            0         1   \n",
       "3                              1                            0         1   \n",
       "4                              1                            0         0   \n",
       "\n",
       "   diabetes_1  regular_ex_1  job_title_Accountant  job_title_Actor  \\\n",
       "0           0             0                     0                1   \n",
       "1           1             1                     0                0   \n",
       "2           1             1                     0                0   \n",
       "3           1             0                     0                0   \n",
       "4           1             0                     0                0   \n",
       "\n",
       "   job_title_Analyst  job_title_Architect  job_title_Beautician  \\\n",
       "0                  0                    0                     0   \n",
       "1                  0                    0                     0   \n",
       "2                  0                    0                     0   \n",
       "3                  0                    0                     0   \n",
       "4                  0                    0                     0   \n",
       "\n",
       "   job_title_Blogger  job_title_Buisnessman  job_title_CA  job_title_CEO  \\\n",
       "0                  0                      0             0              0   \n",
       "1                  0                      0             0              0   \n",
       "2                  0                      0             0              0   \n",
       "3                  0                      0             0              0   \n",
       "4                  0                      0             0              0   \n",
       "\n",
       "   job_title_Chef  job_title_Clerks  job_title_Dancer  \\\n",
       "0               0                 0                 0   \n",
       "1               0                 0                 0   \n",
       "2               0                 0                 0   \n",
       "3               1                 0                 0   \n",
       "4               0                 0                 0   \n",
       "\n",
       "   job_title_DataScientist  job_title_DefencePersonnels  job_title_Doctor  \\\n",
       "0                        0                            0                 0   \n",
       "1                        0                            0                 0   \n",
       "2                        0                            0                 0   \n",
       "3                        0                            0                 0   \n",
       "4                        0                            0                 0   \n",
       "\n",
       "   job_title_Engineer  job_title_Farmer  job_title_FashionDesigner  \\\n",
       "0                   0                 0                          0   \n",
       "1                   1                 0                          0   \n",
       "2                   0                 0                          0   \n",
       "3                   0                 0                          0   \n",
       "4                   0                 0                          0   \n",
       "\n",
       "   job_title_FilmDirector  job_title_FilmMaker  job_title_GovEmployee  \\\n",
       "0                       0                    0                      0   \n",
       "1                       0                    0                      0   \n",
       "2                       0                    0                      0   \n",
       "3                       0                    0                      0   \n",
       "4                       0                    0                      0   \n",
       "\n",
       "   job_title_HomeMakers  job_title_HouseKeeper  job_title_ITProfessional  \\\n",
       "0                     0                      0                         0   \n",
       "1                     0                      0                         0   \n",
       "2                     0                      0                         0   \n",
       "3                     0                      0                         0   \n",
       "4                     1                      0                         0   \n",
       "\n",
       "   job_title_Journalist  job_title_Labourer  job_title_Lawyer  \\\n",
       "0                     0                   0                 0   \n",
       "1                     0                   0                 0   \n",
       "2                     0                   0                 0   \n",
       "3                     0                   0                 0   \n",
       "4                     0                   0                 0   \n",
       "\n",
       "   job_title_Manager  job_title_Photographer  job_title_Police  \\\n",
       "0                  0                       0                 0   \n",
       "1                  0                       0                 0   \n",
       "2                  0                       0                 0   \n",
       "3                  0                       0                 0   \n",
       "4                  0                       0                 0   \n",
       "\n",
       "   job_title_Politician  job_title_Singer  job_title_Student  \\\n",
       "0                     0                 0                  0   \n",
       "1                     0                 0                  0   \n",
       "2                     0                 0                  0   \n",
       "3                     0                 0                  0   \n",
       "4                     0                 0                  0   \n",
       "\n",
       "   job_title_Technician  region_North-East  region_Southern  region_West  \\\n",
       "0                     0                  1                0            0   \n",
       "1                     0                  1                0            0   \n",
       "2                     0                  1                0            0   \n",
       "3                     0                  1                0            0   \n",
       "4                     0                  1                0            0   \n",
       "\n",
       "   bmi*smoker  \n",
       "0    0.000000  \n",
       "1    0.000000  \n",
       "2   17.800000  \n",
       "3   36.400000  \n",
       "4    0.000000  "
      ]
     },
     "execution_count": 82,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Bsed on domain knowledge - possible interaction between bmi and smoker\n",
    "# create a copy of the entire dataset to add the interaction effect using copy()\n",
    "df_insurance_interaction = df_insurance_dummy.copy()\n",
    "\n",
    "# add the interaction variable\n",
    "df_insurance_interaction['bmi*smoker'] = df_insurance_interaction['bmi']*df_insurance_interaction['smoker_1'] \n",
    "df_insurance_interaction.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "5y1uZHjZ5GzP"
   },
   "source": [
    "**2. Split the data into training and test sets**\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 83,
   "metadata": {
    "id": "QzJCpDbO5GzP",
    "outputId": "d2ecb451-f11f-476a-93b4-12dc56283c1e"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The shape of X_train_interaction is: (11042, 57)\n",
      "The shape of X_test_interaction is: (3681, 57)\n",
      "The shape of y_train is: (11042,)\n",
      "The shape of y_test is: (3681,)\n"
     ]
    }
   ],
   "source": [
    "# separate the independent and dependent variables\n",
    "\n",
    "X = df_insurance_interaction.drop(['claim','log_claim'], axis=1)\n",
    "y = df_insurance_interaction['claim']\n",
    "\n",
    "# split data into train subset and test subset for predictor and target variables\n",
    "X_train_interaction, X_test_interaction, y_train, y_test = train_test_split( X, y, random_state=1)\n",
    "\n",
    "# check the dimensions of the train & test subset for \n",
    "print(\"The shape of X_train_interaction is:\",X_train_interaction.shape)\n",
    "print(\"The shape of X_test_interaction is:\",X_test_interaction.shape)\n",
    "print(\"The shape of y_train is:\",y_train.shape)\n",
    "print(\"The shape of y_test is:\",y_test.shape)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "s0Q1wAEn5GzP"
   },
   "source": [
    "**3. Build model using sm.OLS().fit()**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 84,
   "metadata": {
    "id": "mHgIZca05GzP",
    "outputId": "9bfe39df-6187-4ee2-ec39-afb28cf0254d",
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                            OLS Regression Results                            \n",
      "==============================================================================\n",
      "Dep. Variable:                  claim   R-squared:                       0.802\n",
      "Model:                            OLS   Adj. R-squared:                  0.801\n",
      "Method:                 Least Squares   F-statistic:                     796.1\n",
      "Date:                Sun, 16 Oct 2022   Prob (F-statistic):               0.00\n",
      "Time:                        08:56:06   Log-Likelihood:            -1.1055e+05\n",
      "No. Observations:               11042   AIC:                         2.212e+05\n",
      "Df Residuals:                   10985   BIC:                         2.216e+05\n",
      "Df Model:                          56                                         \n",
      "Covariance Type:            nonrobust                                         \n",
      "====================================================================================================\n",
      "                                       coef    std err          t      P>|t|      [0.025      0.975]\n",
      "----------------------------------------------------------------------------------------------------\n",
      "const                             6726.6333    831.125      8.093      0.000    5097.479    8355.787\n",
      "age                                263.4499      4.196     62.788      0.000     255.225     271.675\n",
      "weight                             -34.1458      4.212     -8.108      0.000     -42.401     -25.890\n",
      "bmi                                 29.8457     10.705      2.788      0.005       8.862      50.830\n",
      "no_of_dependents                   551.3404     43.294     12.735      0.000     466.477     636.204\n",
      "bloodpressure                       18.8214      4.929      3.818      0.000       9.159      28.484\n",
      "sex_male                          -300.3447    107.501     -2.794      0.005    -511.066     -89.623\n",
      "hereditary_diseases_Arthritis    -1693.9668    797.386     -2.124      0.034   -3256.987    -130.946\n",
      "hereditary_diseases_Cancer       -2827.9353    801.146     -3.530      0.000   -4398.326   -1257.544\n",
      "hereditary_diseases_Diabetes     -4174.7282    753.924     -5.537      0.000   -5652.554   -2696.902\n",
      "hereditary_diseases_Epilepsy       295.3568    885.755      0.333      0.739   -1440.882    2031.595\n",
      "hereditary_diseases_EyeDisease   -7206.5123    804.363     -8.959      0.000   -8783.208   -5629.816\n",
      "hereditary_diseases_HeartDisease  4103.5781    857.557      4.785      0.000    2422.612    5784.544\n",
      "hereditary_diseases_High BP      -4886.9948    935.520     -5.224      0.000   -6720.781   -3053.208\n",
      "hereditary_diseases_NoDisease    -1.022e+04    531.917    -19.205      0.000   -1.13e+04   -9172.933\n",
      "hereditary_diseases_Obesity      -2386.5790    734.173     -3.251      0.001   -3825.691    -947.467\n",
      "smoker_1                         -1.326e+04    748.696    -17.706      0.000   -1.47e+04   -1.18e+04\n",
      "diabetes_1                        1100.6458    127.001      8.666      0.000     851.701    1349.590\n",
      "regular_ex_1                      -559.5052    126.960     -4.407      0.000    -808.370    -310.641\n",
      "job_title_Accountant                26.8939    490.395      0.055      0.956    -934.368     988.156\n",
      "job_title_Actor                    429.4233    430.601      0.997      0.319    -414.631    1273.478\n",
      "job_title_Analyst                -1142.9059    529.480     -2.159      0.031   -2180.782    -105.030\n",
      "job_title_Architect                388.7433    498.168      0.780      0.435    -587.755    1365.242\n",
      "job_title_Beautician               862.9595    492.026      1.754      0.079    -101.501    1827.420\n",
      "job_title_Blogger                -1011.1029    525.702     -1.923      0.054   -2041.572      19.367\n",
      "job_title_Buisnessman              184.2819    551.291      0.334      0.738    -896.347    1264.911\n",
      "job_title_CA                       218.4053    531.651      0.411      0.681    -823.727    1260.537\n",
      "job_title_CEO                      331.8987    482.782      0.687      0.492    -614.441    1278.239\n",
      "job_title_Chef                   -1189.0678    532.635     -2.232      0.026   -2233.128    -145.008\n",
      "job_title_Clerks                  -283.1757    490.073     -0.578      0.563   -1243.807     677.456\n",
      "job_title_Dancer                   177.0243    436.415      0.406      0.685    -678.427    1032.476\n",
      "job_title_DataScientist            774.9982    499.592      1.551      0.121    -204.293    1754.289\n",
      "job_title_DefencePersonnels      -1039.4515    515.069     -2.018      0.044   -2049.079     -29.824\n",
      "job_title_Doctor                  1119.5279    514.563      2.176      0.030     110.892    2128.164\n",
      "job_title_Engineer                2327.4762    487.659      4.773      0.000    1371.577    3283.376\n",
      "job_title_Farmer                  -246.2608    542.448     -0.454      0.650   -1309.557     817.036\n",
      "job_title_FashionDesigner         1353.3859    484.463      2.794      0.005     403.750    2303.021\n",
      "job_title_FilmDirector            -548.9481    526.509     -1.043      0.297   -1581.001     483.105\n",
      "job_title_FilmMaker               1114.5610    434.685      2.564      0.010     262.501    1966.621\n",
      "job_title_GovEmployee             -758.9025    549.645     -1.381      0.167   -1836.306     318.501\n",
      "job_title_HomeMakers              1156.1135    413.236      2.798      0.005     346.096    1966.131\n",
      "job_title_HouseKeeper              168.4516    436.574      0.386      0.700    -687.313    1024.216\n",
      "job_title_ITProfessional          -518.5245    491.236     -1.056      0.291   -1481.436     444.387\n",
      "job_title_Journalist                57.8083    528.185      0.109      0.913    -977.530    1093.147\n",
      "job_title_Labourer                 997.6037    573.087      1.741      0.082    -125.749    2120.956\n",
      "job_title_Lawyer                   972.6276    513.434      1.894      0.058     -33.795    1979.051\n",
      "job_title_Manager                 1639.2876    443.655      3.695      0.000     769.643    2508.932\n",
      "job_title_Photographer            3158.4640    483.259      6.536      0.000    2211.190    4105.738\n",
      "job_title_Police                   606.0121    476.791      1.271      0.204    -328.585    1540.609\n",
      "job_title_Politician              2368.4685    490.739      4.826      0.000    1406.532    3330.405\n",
      "job_title_Singer                  1220.4903    431.049      2.831      0.005     375.557    2065.424\n",
      "job_title_Student                  908.2383    405.737      2.238      0.025     112.922    1703.555\n",
      "job_title_Technician              -327.6579    522.204     -0.627      0.530   -1351.271     695.956\n",
      "region_North-East                 -133.3252    160.023     -0.833      0.405    -446.998     180.348\n",
      "region_Southern                     -1.4238    152.465     -0.009      0.993    -300.283     297.436\n",
      "region_West                       -128.9685    153.529     -0.840      0.401    -429.914     171.977\n",
      "bmi*smoker                        1129.2709     24.940     45.280      0.000    1080.384    1178.158\n",
      "==============================================================================\n",
      "Omnibus:                     3654.556   Durbin-Watson:                   1.980\n",
      "Prob(Omnibus):                  0.000   Jarque-Bera (JB):            18173.024\n",
      "Skew:                           1.523   Prob(JB):                         0.00\n",
      "Kurtosis:                       8.497   Cond. No.                     4.62e+03\n",
      "==============================================================================\n",
      "\n",
      "Notes:\n",
      "[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n",
      "[2] The condition number is large, 4.62e+03. This might indicate that there are\n",
      "strong multicollinearity or other numerical problems.\n"
     ]
    }
   ],
   "source": [
    "# building a full model with an interaction term using OLS()\n",
    "linreg_with_interaction = sm.OLS(y_train, X_train_interaction).fit()\n",
    "\n",
    "# print the summary output\n",
    "print(linreg_with_interaction.summary())"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "K42vXhce5GzR"
   },
   "source": [
    "**4. Predict the values using test set**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 85,
   "metadata": {
    "id": "cygqkFlz5GzR"
   },
   "outputs": [],
   "source": [
    "# predict the 'claim' using predict()\n",
    "predicted_claim = linreg_with_interaction.predict(X_test_interaction)\n",
    "\n",
    "# extract the 'claim' values from the test data\n",
    "actual_claim = y_test"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "KWdRhJiC5GzS"
   },
   "source": [
    "**5. Compute model accuracy measures**\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 86,
   "metadata": {
    "id": "x_bo-LCa5GzS"
   },
   "outputs": [],
   "source": [
    "# calculate rmse using rmse()\n",
    "linreg_with_interaction_rmse = rmse(actual_claim, predicted_claim)\n",
    "\n",
    "# calculate R-squared using rsquared\n",
    "linreg_with_interaction_rsquared = linreg_with_interaction.rsquared\n",
    "\n",
    "# calculate Adjusted R-Squared using rsquared_adj\n",
    "linreg_with_interaction_rsquared_adj = linreg_with_interaction.rsquared_adj "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "b9dBLFv_5GzS"
   },
   "source": [
    "**6. Tabulate the results**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 87,
   "metadata": {
    "id": "VzWJ1SaO5GzS",
    "outputId": "7ec84886-03aa-483a-84f6-490c0b42b4ca"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Model_Name</th>\n",
       "      <th>R-Squared</th>\n",
       "      <th>Adj. R-Squared</th>\n",
       "      <th>RMSE</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Linreg full model with log of target variable</td>\n",
       "      <td>0.745162</td>\n",
       "      <td>0.743886</td>\n",
       "      <td>7947.405055</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Linreg full model without log of target variable</td>\n",
       "      <td>0.765424</td>\n",
       "      <td>0.764249</td>\n",
       "      <td>5916.234909</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Linreg full model with significant variables</td>\n",
       "      <td>0.760924</td>\n",
       "      <td>0.760555</td>\n",
       "      <td>5911.155096</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>linreg_with_interaction</td>\n",
       "      <td>0.802319</td>\n",
       "      <td>0.801311</td>\n",
       "      <td>5547.061558</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                         Model_Name  R-Squared  \\\n",
       "0     Linreg full model with log of target variable   0.745162   \n",
       "1  Linreg full model without log of target variable   0.765424   \n",
       "2      Linreg full model with significant variables   0.760924   \n",
       "3                           linreg_with_interaction   0.802319   \n",
       "\n",
       "   Adj. R-Squared        RMSE  \n",
       "0        0.743886 7947.405055  \n",
       "1        0.764249 5916.234909  \n",
       "2        0.760555 5911.155096  \n",
       "3        0.801311 5547.061558  "
      ]
     },
     "execution_count": 87,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# compile the required information\n",
    "linreg_with_interaction_metrics = pd.Series({\n",
    "                     'Model_Name': \"linreg_with_interaction\",\n",
    "                     'RMSE': linreg_with_interaction_rmse,\n",
    "                     'R-Squared': linreg_with_interaction_rsquared,\n",
    "                     'Adj. R-Squared': linreg_with_interaction_rsquared_adj\n",
    "                   })\n",
    "\n",
    "# append our result table using append()\n",
    "# ignore_index=True: does not use the index labels\n",
    "# python can only append a Series if ignore_index=True or if the Series has a name\n",
    "score_card = score_card.append(linreg_with_interaction_metrics, ignore_index = True)\n",
    "\n",
    "# print the result table\n",
    "score_card"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 6. Regularization (OLS)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "_76lLw-r5GzU"
   },
   "source": [
    "### 6.1 Ridge Regression (OLS)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "EVy4_NNR5GzU"
   },
   "source": [
    "**1. Define train and test sets**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 88,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The shape of X_train_interaction is: (11042, 57)\n",
      "The shape of X_test_interaction is: (3681, 57)\n",
      "The shape of y_train is: (11042,)\n",
      "The shape of y_test is: (3681,)\n"
     ]
    }
   ],
   "source": [
    "print(\"The shape of X_train_interaction is:\",X_train_interaction.shape)\n",
    "print(\"The shape of X_test_interaction is:\",X_test_interaction.shape)\n",
    "print(\"The shape of y_train is:\",y_train.shape)\n",
    "print(\"The shape of y_test is:\",y_test.shape)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 89,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The shape of X_train_interaction is: (11042, 56)\n",
      "The shape of X_test_interaction is: (3681, 56)\n"
     ]
    }
   ],
   "source": [
    "X_train_interaction_No_const = X_train_interaction.drop('const', axis=1)\n",
    "X_test_interaction_No_const = X_test_interaction.drop('const', axis=1)\n",
    "\n",
    "# check shate after drop of constant\n",
    "print(\"The shape of X_train_interaction is:\",X_train_interaction_No_const.shape)\n",
    "print(\"The shape of X_test_interaction is:\",X_test_interaction_No_const.shape)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "iYhfgezF5GzW"
   },
   "source": [
    "**2. Perform Grid Search to identify Best Parameter**"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "ADOWEYMb5GzW"
   },
   "source": [
    "We first create a list of all the variable names and accuracy metrics whose values we want."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 90,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'alpha': 0.0001}"
      ]
     },
     "execution_count": 90,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Define parameter grid\n",
    "param = {'alpha':[0.00001, 0.0001, 0.001, 0.01, 0.1, 0.5, 1]}\n",
    "\n",
    "# Create instance of algorithm\n",
    "algo_name = Ridge(normalize=True)\n",
    "\n",
    "grid_cv = GridSearchCV(estimator=algo_name, param_grid= param, cv=5, scoring='r2' )\n",
    "grid_cv.fit(X_train_interaction_No_const, y_train)\n",
    "grid_cv.best_params_"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**3. Build model with Best Parameters**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 91,
   "metadata": {},
   "outputs": [],
   "source": [
    "# build Ridge model with best parameter from grid search\n",
    "\n",
    "# Use Normalize=True\n",
    "ridge_regression = Ridge(alpha=0.0001, normalize=True)\n",
    "ridge_model = ridge_regression.fit(X_train_interaction_No_const, y_train)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "0rWILRO15Gze"
   },
   "source": [
    "**4. Predict the values using test set**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 92,
   "metadata": {
    "id": "kfYQSt6K5Gze"
   },
   "outputs": [],
   "source": [
    "# predict the scaled claim using predict()\n",
    "train_predicted_claim = ridge_model.predict(X_train_interaction_No_const)\n",
    "predicted_claim = ridge_model.predict(X_test_interaction_No_const)\n",
    "\n",
    "# extract the 'claim' values from the test data\n",
    "actual_claim = y_test"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "y8RAeDxS5Gze"
   },
   "source": [
    "**5. Compute model accuracy measures**\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 93,
   "metadata": {
    "id": "vhO0puA15Gzf"
   },
   "outputs": [],
   "source": [
    "# calculate rmse using rmse()\n",
    "ridge_regression_rmse = rmse(actual_claim, predicted_claim)\n",
    "\n",
    "# calculate R-squared using rsquared\n",
    "ridge_regression_rsquared = r2_score(y_train, train_predicted_claim)\n",
    "# ridge_regression_test_rsquared = test_r2 = r2_score(actual_claim, predicted_claim)\n",
    "\n",
    "# calculate Adjusted R-Squared using rsquared_adj \n",
    "# compute number of observations\n",
    "n = X_train_interaction_No_const.shape[0]\n",
    "# compute number of independent variables\n",
    "k = X_train_interaction_No_const.shape[1]\n",
    "ridge_regression_rsquared_adj = 1 - (1 - ridge_regression_rsquared)*(n-1)/(n-k-1)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 94,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Discuss the above Adj R2"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "okbqIezv5Gzg"
   },
   "source": [
    "**6. Tabulate the results**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 95,
   "metadata": {
    "id": "y_KpeEwF5Gzg",
    "outputId": "5b351589-5de5-44a6-e38c-47d7bc654672"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Model_Name</th>\n",
       "      <th>R-Squared</th>\n",
       "      <th>Adj. R-Squared</th>\n",
       "      <th>RMSE</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Linreg full model with log of target variable</td>\n",
       "      <td>0.745162</td>\n",
       "      <td>0.743886</td>\n",
       "      <td>7947.405055</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Linreg full model without log of target variable</td>\n",
       "      <td>0.765424</td>\n",
       "      <td>0.764249</td>\n",
       "      <td>5916.234909</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Linreg full model with significant variables</td>\n",
       "      <td>0.760924</td>\n",
       "      <td>0.760555</td>\n",
       "      <td>5911.155096</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>linreg_with_interaction</td>\n",
       "      <td>0.802319</td>\n",
       "      <td>0.801311</td>\n",
       "      <td>5547.061558</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Ridge Regression with Interaction</td>\n",
       "      <td>0.802318</td>\n",
       "      <td>0.801310</td>\n",
       "      <td>5546.528898</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                         Model_Name  R-Squared  \\\n",
       "0     Linreg full model with log of target variable   0.745162   \n",
       "1  Linreg full model without log of target variable   0.765424   \n",
       "2      Linreg full model with significant variables   0.760924   \n",
       "3                           linreg_with_interaction   0.802319   \n",
       "4                 Ridge Regression with Interaction   0.802318   \n",
       "\n",
       "   Adj. R-Squared        RMSE  \n",
       "0        0.743886 7947.405055  \n",
       "1        0.764249 5916.234909  \n",
       "2        0.760555 5911.155096  \n",
       "3        0.801311 5547.061558  \n",
       "4        0.801310 5546.528898  "
      ]
     },
     "execution_count": 95,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# compile the required information\n",
    "ridge_regression_metrics = pd.Series({\n",
    "                     'Model_Name': \"Ridge Regression with Interaction\",\n",
    "                     'RMSE': ridge_regression_rmse,\n",
    "                     'R-Squared': ridge_regression_rsquared,\n",
    "                     'Adj. R-Squared': ridge_regression_rsquared_adj\n",
    "                   })\n",
    "\n",
    "# append our result table using append()\n",
    "# ignore_index=True: does not use the index labels\n",
    "# python can only append a Series if ignore_index=True or if the Series has a name\n",
    "score_card = score_card.append(ridge_regression_metrics, ignore_index = True)\n",
    "\n",
    "# print the result table\n",
    "score_card"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "_76lLw-r5GzU"
   },
   "source": [
    "### 6.2 Lasso Regression (OLS)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "EVy4_NNR5GzU"
   },
   "source": [
    "**1. Define train and test sets**"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We already have Train and Test data defined during Ridge\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "iYhfgezF5GzW"
   },
   "source": [
    "**2. Perform Grid Search to identify Best Parameter**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 96,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'alpha': 0.01}"
      ]
     },
     "execution_count": 96,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Define parameter grid\n",
    "param = {'alpha':[0.00001, 0.0001, 0.001, 0.01, 0.1, 0.5, 1]}\n",
    "\n",
    "# Create instance of algorithm\n",
    "algo_name = Lasso(normalize=True)\n",
    "\n",
    "grid_cv = GridSearchCV(estimator=algo_name, param_grid= param, cv=5, scoring='r2' )\n",
    "grid_cv.fit(X_train_interaction, y_train)\n",
    "grid_cv.best_params_"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**3. Build model with Best Parameters**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 97,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Build Lassso model\n",
    "lasso_regression = Lasso(alpha=0.01, normalize=True)\n",
    "lasso_model = lasso_regression.fit(X_train_interaction_No_const, y_train)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "0rWILRO15Gze"
   },
   "source": [
    "**4. Predict the values using test set**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 98,
   "metadata": {
    "id": "kfYQSt6K5Gze"
   },
   "outputs": [],
   "source": [
    "# predict the scaled claim using predict()\n",
    "train_predicted_claim = lasso_model.predict(X_train_interaction_No_const)\n",
    "predicted_claim = lasso_model.predict(X_test_interaction_No_const)\n",
    "\n",
    "# extract the 'claim' values from the test data\n",
    "actual_claim = y_test"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "y8RAeDxS5Gze"
   },
   "source": [
    "**5. Compute model accuracy measures**\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 99,
   "metadata": {
    "id": "vhO0puA15Gzf"
   },
   "outputs": [],
   "source": [
    "# calculate rmse using rmse()\n",
    "lasso_regression_rmse = rmse(actual_claim, predicted_claim)\n",
    "\n",
    "# calculate R-squared using rsquared\n",
    "lasso_regression_rsquared = r2_score(y_train, train_predicted_claim)\n",
    "# lasso_regression_test_rsquared = test_r2 = r2_score(actual_claim, predicted_claim)\n",
    "\n",
    "# calculate Adjusted R-Squared using rsquared_adj \n",
    "# compute number of observations\n",
    "n = X_train_interaction_No_const.shape[0]\n",
    "# compute number of independent variables\n",
    "k = X_train_interaction_No_const.shape[1]\n",
    "lasso_regression_rsquared_adj = 1 - (1 - lasso_regression_rsquared)*(n-1)/(n-k-1)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 100,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Discuss Adj R2"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "okbqIezv5Gzg"
   },
   "source": [
    "**6. Tabulate the results**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 101,
   "metadata": {
    "id": "y_KpeEwF5Gzg",
    "outputId": "5b351589-5de5-44a6-e38c-47d7bc654672"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Model_Name</th>\n",
       "      <th>R-Squared</th>\n",
       "      <th>Adj. R-Squared</th>\n",
       "      <th>RMSE</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Linreg full model with log of target variable</td>\n",
       "      <td>0.745162</td>\n",
       "      <td>0.743886</td>\n",
       "      <td>7947.405055</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Linreg full model without log of target variable</td>\n",
       "      <td>0.765424</td>\n",
       "      <td>0.764249</td>\n",
       "      <td>5916.234909</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Linreg full model with significant variables</td>\n",
       "      <td>0.760924</td>\n",
       "      <td>0.760555</td>\n",
       "      <td>5911.155096</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>linreg_with_interaction</td>\n",
       "      <td>0.802319</td>\n",
       "      <td>0.801311</td>\n",
       "      <td>5547.061558</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Ridge Regression with Interaction</td>\n",
       "      <td>0.802318</td>\n",
       "      <td>0.801310</td>\n",
       "      <td>5546.528898</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>Lasso Regression with Interaction</td>\n",
       "      <td>0.802315</td>\n",
       "      <td>0.801307</td>\n",
       "      <td>5545.870722</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                         Model_Name  R-Squared  \\\n",
       "0     Linreg full model with log of target variable   0.745162   \n",
       "1  Linreg full model without log of target variable   0.765424   \n",
       "2      Linreg full model with significant variables   0.760924   \n",
       "3                           linreg_with_interaction   0.802319   \n",
       "4                 Ridge Regression with Interaction   0.802318   \n",
       "5                 Lasso Regression with Interaction   0.802315   \n",
       "\n",
       "   Adj. R-Squared        RMSE  \n",
       "0        0.743886 7947.405055  \n",
       "1        0.764249 5916.234909  \n",
       "2        0.760555 5911.155096  \n",
       "3        0.801311 5547.061558  \n",
       "4        0.801310 5546.528898  \n",
       "5        0.801307 5545.870722  "
      ]
     },
     "execution_count": 101,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# compile the required information\n",
    "lasso_regression_metrics = pd.Series({\n",
    "                     'Model_Name': \"Lasso Regression with Interaction\",\n",
    "                     'RMSE': lasso_regression_rmse,\n",
    "                     'R-Squared': lasso_regression_rsquared,\n",
    "                     'Adj. R-Squared': lasso_regression_rsquared_adj\n",
    "                   })\n",
    "\n",
    "# append our result table using append()\n",
    "# ignore_index=True: does not use the index labels\n",
    "# python can only append a Series if ignore_index=True or if the Series has a name\n",
    "score_card = score_card.append(lasso_regression_metrics, ignore_index = True)\n",
    "\n",
    "# print the result table\n",
    "score_card"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 102,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Discuss Adj R2 in the contexxt of Ridge, Lasso, ElasticNet"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "_76lLw-r5GzU"
   },
   "source": [
    "### 6.2 ElasticNet Regression"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "EVy4_NNR5GzU"
   },
   "source": [
    "**1. Define train and test sets**"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We already have Train and Test data defined during Ridge"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "iYhfgezF5GzW"
   },
   "source": [
    "**2. Perform Grid Search to identify Best Parameter**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 103,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'alpha': 0.001, 'l1_ratio': 0.7}"
      ]
     },
     "execution_count": 103,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Define parameter grid\n",
    "param = {'alpha':[0.001, 0.01, 0.1, 0.5],\n",
    "         'l1_ratio':[0.01,0.1,0.3,0.5,0.7]}\n",
    "\n",
    "# Create instance of algorithm\n",
    "algo_name = ElasticNet(normalize=True)\n",
    "\n",
    "grid_cv = GridSearchCV(estimator=algo_name, param_grid= param, cv=5, scoring='r2' )\n",
    "grid_cv.fit(X_train_interaction, y_train)\n",
    "grid_cv.best_params_"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 104,
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.linear_model import Ridge, Lasso, ElasticNet\n",
    "from sklearn.model_selection import GridSearchCV"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**3. Build model with Best Parameters**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 105,
   "metadata": {},
   "outputs": [],
   "source": [
    "# build Gidge model with best parameter from grid search\n",
    "\n",
    "# Use Normalize=True\n",
    "elasticnet_regression = ElasticNet(alpha=0.01, l1_ratio=1, normalize=True)\n",
    "elasticnet_model = elasticnet_regression.fit(X_train_interaction_No_const, y_train)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "0rWILRO15Gze"
   },
   "source": [
    "**4. Predict the values using test set**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 106,
   "metadata": {
    "id": "kfYQSt6K5Gze"
   },
   "outputs": [],
   "source": [
    "# predict the scaled claim using predict()\n",
    "train_predicted_claim = elasticnet_model.predict(X_train_interaction_No_const)\n",
    "predicted_claim = elasticnet_model.predict(X_test_interaction_No_const)\n",
    "\n",
    "# extract the 'claim' values from the test data\n",
    "actual_claim = y_test"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "y8RAeDxS5Gze"
   },
   "source": [
    "**5. Compute model accuracy measures**\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 107,
   "metadata": {
    "id": "vhO0puA15Gzf"
   },
   "outputs": [],
   "source": [
    "# calculate rmse using rmse()\n",
    "elasticnet_regression_rmse = rmse(actual_claim, predicted_claim)\n",
    "\n",
    "# calculate R-squared using rsquared\n",
    "elasticnet_regression_rsquared = r2_score(y_train, train_predicted_claim)\n",
    "# elasticnet_regression_test_rsquared = test_r2 = r2_score(actual_claim, predicted_claim)\n",
    "\n",
    "# calculate Adjusted R-Squared using rsquared_adj \n",
    "# compute number of observations\n",
    "n = X_train_interaction_No_const.shape[0]\n",
    "# compute number of independent variables\n",
    "k = X_train_interaction_No_const.shape[1]\n",
    "elasticnet_regression_rsquared_adj = 1 - (1 - elasticnet_regression_rsquared)*(n-1)/(n-k-1)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "okbqIezv5Gzg"
   },
   "source": [
    "**6. Tabulate the results**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 108,
   "metadata": {
    "id": "y_KpeEwF5Gzg",
    "outputId": "5b351589-5de5-44a6-e38c-47d7bc654672"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Model_Name</th>\n",
       "      <th>R-Squared</th>\n",
       "      <th>Adj. R-Squared</th>\n",
       "      <th>RMSE</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Linreg full model with log of target variable</td>\n",
       "      <td>0.745162</td>\n",
       "      <td>0.743886</td>\n",
       "      <td>7947.405055</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Linreg full model without log of target variable</td>\n",
       "      <td>0.765424</td>\n",
       "      <td>0.764249</td>\n",
       "      <td>5916.234909</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Linreg full model with significant variables</td>\n",
       "      <td>0.760924</td>\n",
       "      <td>0.760555</td>\n",
       "      <td>5911.155096</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>linreg_with_interaction</td>\n",
       "      <td>0.802319</td>\n",
       "      <td>0.801311</td>\n",
       "      <td>5547.061558</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Ridge Regression with Interaction</td>\n",
       "      <td>0.802318</td>\n",
       "      <td>0.801310</td>\n",
       "      <td>5546.528898</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>Lasso Regression with Interaction</td>\n",
       "      <td>0.802315</td>\n",
       "      <td>0.801307</td>\n",
       "      <td>5545.870722</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>ElasticNet Regression with Interaction</td>\n",
       "      <td>0.802315</td>\n",
       "      <td>0.801307</td>\n",
       "      <td>5545.870722</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                         Model_Name  R-Squared  \\\n",
       "0     Linreg full model with log of target variable   0.745162   \n",
       "1  Linreg full model without log of target variable   0.765424   \n",
       "2      Linreg full model with significant variables   0.760924   \n",
       "3                           linreg_with_interaction   0.802319   \n",
       "4                 Ridge Regression with Interaction   0.802318   \n",
       "5                 Lasso Regression with Interaction   0.802315   \n",
       "6            ElasticNet Regression with Interaction   0.802315   \n",
       "\n",
       "   Adj. R-Squared        RMSE  \n",
       "0        0.743886 7947.405055  \n",
       "1        0.764249 5916.234909  \n",
       "2        0.760555 5911.155096  \n",
       "3        0.801311 5547.061558  \n",
       "4        0.801310 5546.528898  \n",
       "5        0.801307 5545.870722  \n",
       "6        0.801307 5545.870722  "
      ]
     },
     "execution_count": 108,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# compile the required information\n",
    "elasticnet_regression_metrics = pd.Series({\n",
    "                     'Model_Name': \"ElasticNet Regression with Interaction\",\n",
    "                     'RMSE': elasticnet_regression_rmse,\n",
    "                     'R-Squared': elasticnet_regression_rsquared,\n",
    "                     'Adj. R-Squared': elasticnet_regression_rsquared_adj\n",
    "                   })\n",
    "\n",
    "# append our result table using append()\n",
    "# ignore_index=True: does not use the index labels\n",
    "# python can only append a Series if ignore_index=True or if the Series has a name\n",
    "score_card = score_card.append(elasticnet_regression_metrics, ignore_index = True)\n",
    "\n",
    "# print the result table\n",
    "score_card"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 109,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Discuss Adj R2 in the contexxt of Ridge, Lasso, ElasticNet"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "1eaf1p_N5Gz-"
   },
   "source": [
    "<a id='rmse_and_r-squared'></a>\n",
    "## 8. Conclusion and Interpretation"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "yl4fNiFA5Gz-"
   },
   "source": [
    "To take the final conclusion, let us recall the result table again"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 110,
   "metadata": {
    "id": "v8Xjx_BD5Gz-",
    "outputId": "39ddd319-5042-44ae-b9d6-277e65d72dcb"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Model_Name</th>\n",
       "      <th>R-Squared</th>\n",
       "      <th>Adj. R-Squared</th>\n",
       "      <th>RMSE</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Linreg full model with log of target variable</td>\n",
       "      <td>0.745162</td>\n",
       "      <td>0.743886</td>\n",
       "      <td>7947.405055</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Linreg full model without log of target variable</td>\n",
       "      <td>0.765424</td>\n",
       "      <td>0.764249</td>\n",
       "      <td>5916.234909</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Linreg full model with significant variables</td>\n",
       "      <td>0.760924</td>\n",
       "      <td>0.760555</td>\n",
       "      <td>5911.155096</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>linreg_with_interaction</td>\n",
       "      <td>0.802319</td>\n",
       "      <td>0.801311</td>\n",
       "      <td>5547.061558</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Ridge Regression with Interaction</td>\n",
       "      <td>0.802318</td>\n",
       "      <td>0.801310</td>\n",
       "      <td>5546.528898</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>Lasso Regression with Interaction</td>\n",
       "      <td>0.802315</td>\n",
       "      <td>0.801307</td>\n",
       "      <td>5545.870722</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>ElasticNet Regression with Interaction</td>\n",
       "      <td>0.802315</td>\n",
       "      <td>0.801307</td>\n",
       "      <td>5545.870722</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                         Model_Name  R-Squared  \\\n",
       "0     Linreg full model with log of target variable   0.745162   \n",
       "1  Linreg full model without log of target variable   0.765424   \n",
       "2      Linreg full model with significant variables   0.760924   \n",
       "3                           linreg_with_interaction   0.802319   \n",
       "4                 Ridge Regression with Interaction   0.802318   \n",
       "5                 Lasso Regression with Interaction   0.802315   \n",
       "6            ElasticNet Regression with Interaction   0.802315   \n",
       "\n",
       "   Adj. R-Squared        RMSE  \n",
       "0        0.743886 7947.405055  \n",
       "1        0.764249 5916.234909  \n",
       "2        0.760555 5911.155096  \n",
       "3        0.801311 5547.061558  \n",
       "4        0.801310 5546.528898  \n",
       "5        0.801307 5545.870722  \n",
       "6        0.801307 5545.870722  "
      ]
     },
     "execution_count": 110,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# view the result table\n",
    "score_card"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "gm0BQ1EO5Gz_"
   },
   "source": [
    "**Let visualize graphically the above table**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 111,
   "metadata": {
    "id": "Fn2z0uP95G0A",
    "outputId": "2b4f6950-33be-4ea0-f095-bd70feeb581a",
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1080x576 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# plot the accuracy measure for all models\n",
    "# secondary_y: specify the data on the secondary axis\n",
    "score_card.plot(secondary_y=['R-Squared','Adj. R-Squared'])\n",
    "\n",
    "# display just the plot\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Business Interpretation\n",
    "1. **From this model we can look at millions of data points and generate smart insights — without direction from a human agent — can be instantly scalable and create a robust user experience.** \n",
    "2. **The ultimate goal is the best possible user experience, based on intuition drawn from relevant information and that weeds out the irrelevant.**\n",
    "3. **It’s important to note that a majority of the price consumers pay when enrolling in health insurance goes into risk prediction and risk management. By using this model user can get more accurate risk models and predict which individuals need specific types of care, health insurance providers can spend more money on their beneficiaries and less on those processes.**"
   ]
  }
 ],
 "metadata": {
  "colab": {
   "collapsed_sections": [
    "XjiwFXQG5GxW",
    "XA1jcJ0j5GxX",
    "TYRILX945Gxa",
    "MzwJdyTH5Gxi",
    "MiTunCzF5Gxn",
    "UuuzUOFU5Gxp",
    "hxFruD-k5Gxq",
    "5t5POIFn5Gxv",
    "2xa64prt5Gx0",
    "c-t1S8UY5Gx4",
    "je56zj585Gx6",
    "KlMSxRrR5Gx_",
    "n7PHYrrN5GyA",
    "W7mWNZeJ5GyA",
    "xtajOSPx5GyH",
    "t5K9zCzs5GyM",
    "b9eYO3Ms5GyM",
    "88Lw1_Uq5GyW",
    "F94HmKCF5GyW",
    "UsRZ2DXZ5GyY",
    "KqxK_Cdt5Gye",
    "rQWRjs7U5Gyf",
    "Bn2GSpdi5Gyo",
    "1dc4FLQe5Gyr",
    "RE0gp-Be5Gyv",
    "CKS3D16z5Gyw",
    "YPTj5UF25Gy_",
    "kMgHDrhB5Gy_",
    "y9CZUJbx5GzA",
    "c2XA2VIy5GzC",
    "jxtG7YqH5GzE",
    "Dsb2hgul5GzI",
    "jKjLE0Pl5GzN",
    "TkBvLdHC5GzT",
    "_76lLw-r5GzU",
    "FMuNaY7v5Gzh",
    "m61mFMQh5Gzt",
    "FVsyv8jh5Gz1",
    "FI5BZ_Yq5Gz2",
    "YMIPrvmw5Gz5",
    "1eaf1p_N5Gz-"
   ],
   "name": "SLR - Case Study - Insurance Claim - [v1.6 - 13052020].ipynb",
   "provenance": []
  },
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 1
}
